
Assi01_4_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011a8  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000188  08001338  08001338  00002338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014c0  080014c0  00003050  2**0
                  CONTENTS
  4 .ARM          00000008  080014c0  080014c0  000024c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080014c8  080014c8  00003050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014c8  080014c8  000024c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014cc  080014cc  000024cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000050  20000000  080014d0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00003050  2**0
                  CONTENTS
 10 .bss          00000168  20000050  20000050  00003050  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001b8  200001b8  00003050  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00003050  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000f82  00000000  00000000  0000307a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000545  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000110  00000000  00000000  00004548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000b2  00000000  00000000  00004658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001865d  00000000  00000000  0000470a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001a68  00000000  00000000  0001cd67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008bccf  00000000  00000000  0001e7cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000aa49e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000950  00000000  00000000  000aa4e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000aae34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000060  00000000  00000000  000aae53  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000050 	.word	0x20000050
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001320 	.word	0x08001320

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000054 	.word	0x20000054
 80001cc:	08001320 	.word	0x08001320

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <led_init>:
 *      Author: spam
 */
#include"led.h"

void  led_init(uint32_t pin)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
  RCC->AHB1ENR |= BV(GPIOD_CCLKEN);
 8000288:	4b26      	ldr	r3, [pc, #152]	@ (8000324 <led_init+0xa4>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800028c:	4a25      	ldr	r2, [pc, #148]	@ (8000324 <led_init+0xa4>)
 800028e:	f043 0308 	orr.w	r3, r3, #8
 8000292:	6313      	str	r3, [r2, #48]	@ 0x30
  GPIO_LED->MODER &= ~(BV((pin<<1) + 1));
 8000294:	4b24      	ldr	r3, [pc, #144]	@ (8000328 <led_init+0xa8>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	687a      	ldr	r2, [r7, #4]
 800029a:	0052      	lsls	r2, r2, #1
 800029c:	3201      	adds	r2, #1
 800029e:	2101      	movs	r1, #1
 80002a0:	fa01 f202 	lsl.w	r2, r1, r2
 80002a4:	43d2      	mvns	r2, r2
 80002a6:	4611      	mov	r1, r2
 80002a8:	4a1f      	ldr	r2, [pc, #124]	@ (8000328 <led_init+0xa8>)
 80002aa:	400b      	ands	r3, r1
 80002ac:	6013      	str	r3, [r2, #0]
  GPIO_LED->MODER |= (BV(pin<<1));
 80002ae:	4b1e      	ldr	r3, [pc, #120]	@ (8000328 <led_init+0xa8>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	687a      	ldr	r2, [r7, #4]
 80002b4:	0052      	lsls	r2, r2, #1
 80002b6:	2101      	movs	r1, #1
 80002b8:	fa01 f202 	lsl.w	r2, r1, r2
 80002bc:	4611      	mov	r1, r2
 80002be:	4a1a      	ldr	r2, [pc, #104]	@ (8000328 <led_init+0xa8>)
 80002c0:	430b      	orrs	r3, r1
 80002c2:	6013      	str	r3, [r2, #0]
  GPIO_LED->OTYPER &= ~BV(13);
 80002c4:	4b18      	ldr	r3, [pc, #96]	@ (8000328 <led_init+0xa8>)
 80002c6:	685b      	ldr	r3, [r3, #4]
 80002c8:	4a17      	ldr	r2, [pc, #92]	@ (8000328 <led_init+0xa8>)
 80002ca:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80002ce:	6053      	str	r3, [r2, #4]
  GPIO_LED->OSPEEDR &= ~(BV((pin<<1) +1) | (BV(pin<<1)));
 80002d0:	4b15      	ldr	r3, [pc, #84]	@ (8000328 <led_init+0xa8>)
 80002d2:	689b      	ldr	r3, [r3, #8]
 80002d4:	687a      	ldr	r2, [r7, #4]
 80002d6:	0052      	lsls	r2, r2, #1
 80002d8:	3201      	adds	r2, #1
 80002da:	2101      	movs	r1, #1
 80002dc:	4091      	lsls	r1, r2
 80002de:	687a      	ldr	r2, [r7, #4]
 80002e0:	0052      	lsls	r2, r2, #1
 80002e2:	2001      	movs	r0, #1
 80002e4:	fa00 f202 	lsl.w	r2, r0, r2
 80002e8:	430a      	orrs	r2, r1
 80002ea:	43d2      	mvns	r2, r2
 80002ec:	4611      	mov	r1, r2
 80002ee:	4a0e      	ldr	r2, [pc, #56]	@ (8000328 <led_init+0xa8>)
 80002f0:	400b      	ands	r3, r1
 80002f2:	6093      	str	r3, [r2, #8]
  GPIO_LED->PUPDR &= ~(BV((pin<<1) +1) | (BV(pin<<1)));
 80002f4:	4b0c      	ldr	r3, [pc, #48]	@ (8000328 <led_init+0xa8>)
 80002f6:	68db      	ldr	r3, [r3, #12]
 80002f8:	687a      	ldr	r2, [r7, #4]
 80002fa:	0052      	lsls	r2, r2, #1
 80002fc:	3201      	adds	r2, #1
 80002fe:	2101      	movs	r1, #1
 8000300:	4091      	lsls	r1, r2
 8000302:	687a      	ldr	r2, [r7, #4]
 8000304:	0052      	lsls	r2, r2, #1
 8000306:	2001      	movs	r0, #1
 8000308:	fa00 f202 	lsl.w	r2, r0, r2
 800030c:	430a      	orrs	r2, r1
 800030e:	43d2      	mvns	r2, r2
 8000310:	4611      	mov	r1, r2
 8000312:	4a05      	ldr	r2, [pc, #20]	@ (8000328 <led_init+0xa8>)
 8000314:	400b      	ands	r3, r1
 8000316:	60d3      	str	r3, [r2, #12]

}
 8000318:	bf00      	nop
 800031a:	370c      	adds	r7, #12
 800031c:	46bd      	mov	sp, r7
 800031e:	bc80      	pop	{r7}
 8000320:	4770      	bx	lr
 8000322:	bf00      	nop
 8000324:	40023800 	.word	0x40023800
 8000328:	40020c00 	.word	0x40020c00

0800032c <led_on>:

void led_on(uint32_t pin)
{
 800032c:	b480      	push	{r7}
 800032e:	b083      	sub	sp, #12
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
	GPIO_LED->ODR |= BV(pin);
 8000334:	4b07      	ldr	r3, [pc, #28]	@ (8000354 <led_on+0x28>)
 8000336:	695b      	ldr	r3, [r3, #20]
 8000338:	2101      	movs	r1, #1
 800033a:	687a      	ldr	r2, [r7, #4]
 800033c:	fa01 f202 	lsl.w	r2, r1, r2
 8000340:	4611      	mov	r1, r2
 8000342:	4a04      	ldr	r2, [pc, #16]	@ (8000354 <led_on+0x28>)
 8000344:	430b      	orrs	r3, r1
 8000346:	6153      	str	r3, [r2, #20]
}
 8000348:	bf00      	nop
 800034a:	370c      	adds	r7, #12
 800034c:	46bd      	mov	sp, r7
 800034e:	bc80      	pop	{r7}
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	40020c00 	.word	0x40020c00

08000358 <led_off>:

void led_off(uint32_t pin)
{
 8000358:	b480      	push	{r7}
 800035a:	b083      	sub	sp, #12
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
	GPIO_LED->ODR &= ~BV(pin);
 8000360:	4b07      	ldr	r3, [pc, #28]	@ (8000380 <led_off+0x28>)
 8000362:	695b      	ldr	r3, [r3, #20]
 8000364:	2101      	movs	r1, #1
 8000366:	687a      	ldr	r2, [r7, #4]
 8000368:	fa01 f202 	lsl.w	r2, r1, r2
 800036c:	43d2      	mvns	r2, r2
 800036e:	4611      	mov	r1, r2
 8000370:	4a03      	ldr	r2, [pc, #12]	@ (8000380 <led_off+0x28>)
 8000372:	400b      	ands	r3, r1
 8000374:	6153      	str	r3, [r2, #20]
}
 8000376:	bf00      	nop
 8000378:	370c      	adds	r7, #12
 800037a:	46bd      	mov	sp, r7
 800037c:	bc80      	pop	{r7}
 800037e:	4770      	bx	lr
 8000380:	40020c00 	.word	0x40020c00

08000384 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b082      	sub	sp, #8
 8000388:	af00      	add	r7, sp, #0
	SystemInit();
 800038a:	f000 f877 	bl	800047c <SystemInit>

	//printf("Hello stm 32\n");

   led_init(LED_BLUE_PIN);
 800038e:	200f      	movs	r0, #15
 8000390:	f7ff ff76 	bl	8000280 <led_init>
   led_init(LED_RED_PIN);
 8000394:	200e      	movs	r0, #14
 8000396:	f7ff ff73 	bl	8000280 <led_init>
   init_uart(9600);
 800039a:	f44f 5016 	mov.w	r0, #9600	@ 0x2580
 800039e:	f000 f8a3 	bl	80004e8 <init_uart>
   int choice;
   uartputs("1. Red Led On\r\n2. Red Led Off\r\n3. Blue Led On\r\n4. Blue Led Off\r\n");
 80003a2:	4818      	ldr	r0, [pc, #96]	@ (8000404 <main+0x80>)
 80003a4:	f000 f932 	bl	800060c <uartputs>
   char ch[2];
   while(1)
   {
	   uartgets(ch);
 80003a8:	463b      	mov	r3, r7
 80003aa:	4618      	mov	r0, r3
 80003ac:	f000 f94a 	bl	8000644 <uartgets>
	   sscanf(ch, "%d", &choice);
 80003b0:	1d3a      	adds	r2, r7, #4
 80003b2:	463b      	mov	r3, r7
 80003b4:	4914      	ldr	r1, [pc, #80]	@ (8000408 <main+0x84>)
 80003b6:	4618      	mov	r0, r3
 80003b8:	f000 f994 	bl	80006e4 <siscanf>
	   switch(choice)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	3b01      	subs	r3, #1
 80003c0:	2b03      	cmp	r3, #3
 80003c2:	d81b      	bhi.n	80003fc <main+0x78>
 80003c4:	a201      	add	r2, pc, #4	@ (adr r2, 80003cc <main+0x48>)
 80003c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ca:	bf00      	nop
 80003cc:	080003dd 	.word	0x080003dd
 80003d0:	080003e5 	.word	0x080003e5
 80003d4:	080003ed 	.word	0x080003ed
 80003d8:	080003f5 	.word	0x080003f5
	   {
	   case 1: led_on(LED_RED_PIN);
 80003dc:	200e      	movs	r0, #14
 80003de:	f7ff ffa5 	bl	800032c <led_on>
	   	   	   break;
 80003e2:	e00e      	b.n	8000402 <main+0x7e>

	   case 2: led_off(LED_RED_PIN);
 80003e4:	200e      	movs	r0, #14
 80003e6:	f7ff ffb7 	bl	8000358 <led_off>
	   	   	   	break;
 80003ea:	e00a      	b.n	8000402 <main+0x7e>

	   case 3: led_on(LED_BLUE_PIN);
 80003ec:	200f      	movs	r0, #15
 80003ee:	f7ff ff9d 	bl	800032c <led_on>
	   	   	   	break;
 80003f2:	e006      	b.n	8000402 <main+0x7e>

	   case 4: led_off(LED_BLUE_PIN);
 80003f4:	200f      	movs	r0, #15
 80003f6:	f7ff ffaf 	bl	8000358 <led_off>
	   	   	   	 break;
 80003fa:	e002      	b.n	8000402 <main+0x7e>
	   default: uartputs("Invalid choice\r\n");
 80003fc:	4803      	ldr	r0, [pc, #12]	@ (800040c <main+0x88>)
 80003fe:	f000 f905 	bl	800060c <uartputs>
	   uartgets(ch);
 8000402:	e7d1      	b.n	80003a8 <main+0x24>
 8000404:	08001338 	.word	0x08001338
 8000408:	0800137c 	.word	0x0800137c
 800040c:	08001380 	.word	0x08001380

08000410 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000410:	b580      	push	{r7, lr}
 8000412:	b086      	sub	sp, #24
 8000414:	af00      	add	r7, sp, #0
 8000416:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000418:	4a14      	ldr	r2, [pc, #80]	@ (800046c <_sbrk+0x5c>)
 800041a:	4b15      	ldr	r3, [pc, #84]	@ (8000470 <_sbrk+0x60>)
 800041c:	1ad3      	subs	r3, r2, r3
 800041e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000420:	697b      	ldr	r3, [r7, #20]
 8000422:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000424:	4b13      	ldr	r3, [pc, #76]	@ (8000474 <_sbrk+0x64>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	2b00      	cmp	r3, #0
 800042a:	d102      	bne.n	8000432 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800042c:	4b11      	ldr	r3, [pc, #68]	@ (8000474 <_sbrk+0x64>)
 800042e:	4a12      	ldr	r2, [pc, #72]	@ (8000478 <_sbrk+0x68>)
 8000430:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000432:	4b10      	ldr	r3, [pc, #64]	@ (8000474 <_sbrk+0x64>)
 8000434:	681a      	ldr	r2, [r3, #0]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4413      	add	r3, r2
 800043a:	693a      	ldr	r2, [r7, #16]
 800043c:	429a      	cmp	r2, r3
 800043e:	d207      	bcs.n	8000450 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000440:	f000 f97c 	bl	800073c <__errno>
 8000444:	4603      	mov	r3, r0
 8000446:	220c      	movs	r2, #12
 8000448:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800044a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800044e:	e009      	b.n	8000464 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000450:	4b08      	ldr	r3, [pc, #32]	@ (8000474 <_sbrk+0x64>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000456:	4b07      	ldr	r3, [pc, #28]	@ (8000474 <_sbrk+0x64>)
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4413      	add	r3, r2
 800045e:	4a05      	ldr	r2, [pc, #20]	@ (8000474 <_sbrk+0x64>)
 8000460:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000462:	68fb      	ldr	r3, [r7, #12]
}
 8000464:	4618      	mov	r0, r3
 8000466:	3718      	adds	r7, #24
 8000468:	46bd      	mov	sp, r7
 800046a:	bd80      	pop	{r7, pc}
 800046c:	20020000 	.word	0x20020000
 8000470:	00000400 	.word	0x00000400
 8000474:	2000006c 	.word	0x2000006c
 8000478:	200001b8 	.word	0x200001b8

0800047c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	af00      	add	r7, sp, #0
  DWT_Init();
 8000480:	f000 f802 	bl	8000488 <DWT_Init>
}
 8000484:	bf00      	nop
 8000486:	bd80      	pop	{r7, pc}

08000488 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 8000488:	b480      	push	{r7}
 800048a:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 800048c:	4b14      	ldr	r3, [pc, #80]	@ (80004e0 <DWT_Init+0x58>)
 800048e:	68db      	ldr	r3, [r3, #12]
 8000490:	4a13      	ldr	r2, [pc, #76]	@ (80004e0 <DWT_Init+0x58>)
 8000492:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000496:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 8000498:	4b11      	ldr	r3, [pc, #68]	@ (80004e0 <DWT_Init+0x58>)
 800049a:	68db      	ldr	r3, [r3, #12]
 800049c:	4a10      	ldr	r2, [pc, #64]	@ (80004e0 <DWT_Init+0x58>)
 800049e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80004a2:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80004a4:	4b0f      	ldr	r3, [pc, #60]	@ (80004e4 <DWT_Init+0x5c>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	4a0e      	ldr	r2, [pc, #56]	@ (80004e4 <DWT_Init+0x5c>)
 80004aa:	f023 0301 	bic.w	r3, r3, #1
 80004ae:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80004b0:	4b0c      	ldr	r3, [pc, #48]	@ (80004e4 <DWT_Init+0x5c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a0b      	ldr	r2, [pc, #44]	@ (80004e4 <DWT_Init+0x5c>)
 80004b6:	f043 0301 	orr.w	r3, r3, #1
 80004ba:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80004bc:	4b09      	ldr	r3, [pc, #36]	@ (80004e4 <DWT_Init+0x5c>)
 80004be:	2200      	movs	r2, #0
 80004c0:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 80004c2:	bf00      	nop
    __ASM volatile ("NOP");
 80004c4:	bf00      	nop
    __ASM volatile ("NOP");
 80004c6:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 80004c8:	4b06      	ldr	r3, [pc, #24]	@ (80004e4 <DWT_Init+0x5c>)
 80004ca:	685b      	ldr	r3, [r3, #4]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	bf0c      	ite	eq
 80004d0:	2301      	moveq	r3, #1
 80004d2:	2300      	movne	r3, #0
 80004d4:	b2db      	uxtb	r3, r3
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	46bd      	mov	sp, r7
 80004da:	bc80      	pop	{r7}
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	e000edf0 	.word	0xe000edf0
 80004e4:	e0001000 	.word	0xe0001000

080004e8 <init_uart>:

#include "uart.h"


void init_uart(uint32_t bps)
{
 80004e8:	b480      	push	{r7}
 80004ea:	b083      	sub	sp, #12
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
	//ENABLE GPIO PINS
	RCC->AHB1ENR |= (BV(GPIO_UART_CLKEN));
 80004f0:	4b2c      	ldr	r3, [pc, #176]	@ (80005a4 <init_uart+0xbc>)
 80004f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f4:	4a2b      	ldr	r2, [pc, #172]	@ (80005a4 <init_uart+0xbc>)
 80004f6:	f043 0301 	orr.w	r3, r3, #1
 80004fa:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIO_UART->MODER |= (BV((UART_TX<<1) + 1 ) | BV((UART_RX<<1) + 1));
 80004fc:	4b2a      	ldr	r3, [pc, #168]	@ (80005a8 <init_uart+0xc0>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a29      	ldr	r2, [pc, #164]	@ (80005a8 <init_uart+0xc0>)
 8000502:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8000506:	6013      	str	r3, [r2, #0]
    GPIO_UART->MODER &= ~(BV(UART_TX<<1) | BV(UART_RX<<1));
 8000508:	4b27      	ldr	r3, [pc, #156]	@ (80005a8 <init_uart+0xc0>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a26      	ldr	r2, [pc, #152]	@ (80005a8 <init_uart+0xc0>)
 800050e:	f023 0350 	bic.w	r3, r3, #80	@ 0x50
 8000512:	6013      	str	r3, [r2, #0]
    GPIO_UART->AFR[0] |= BV(14) | BV(13) | BV(12) | BV(10) | BV(9) | BV(8);
 8000514:	4b24      	ldr	r3, [pc, #144]	@ (80005a8 <init_uart+0xc0>)
 8000516:	6a1b      	ldr	r3, [r3, #32]
 8000518:	4a23      	ldr	r2, [pc, #140]	@ (80005a8 <init_uart+0xc0>)
 800051a:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 800051e:	6213      	str	r3, [r2, #32]
    GPIO_UART->AFR[0] &= ~(BV(15) | BV(11));
 8000520:	4b21      	ldr	r3, [pc, #132]	@ (80005a8 <init_uart+0xc0>)
 8000522:	6a1b      	ldr	r3, [r3, #32]
 8000524:	4a20      	ldr	r2, [pc, #128]	@ (80005a8 <init_uart+0xc0>)
 8000526:	f423 4308 	bic.w	r3, r3, #34816	@ 0x8800
 800052a:	6213      	str	r3, [r2, #32]


    //ENABLE UART PINS
    RCC->APB1ENR |= (BV(UART_CLKEN));
 800052c:	4b1d      	ldr	r3, [pc, #116]	@ (80005a4 <init_uart+0xbc>)
 800052e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000530:	4a1c      	ldr	r2, [pc, #112]	@ (80005a4 <init_uart+0xbc>)
 8000532:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000536:	6413      	str	r3, [r2, #64]	@ 0x40

    UART->CR1 |= (BV(USART_CR1_TE_Pos) | BV(USART_CR1_RE_Pos));
 8000538:	4b1c      	ldr	r3, [pc, #112]	@ (80005ac <init_uart+0xc4>)
 800053a:	68db      	ldr	r3, [r3, #12]
 800053c:	4a1b      	ldr	r2, [pc, #108]	@ (80005ac <init_uart+0xc4>)
 800053e:	f043 030c 	orr.w	r3, r3, #12
 8000542:	60d3      	str	r3, [r2, #12]
    UART->CR1 &= ~(BV(USART_CR1_M_Pos) | BV(USART_CR1_OVER8_Pos));
 8000544:	4b19      	ldr	r3, [pc, #100]	@ (80005ac <init_uart+0xc4>)
 8000546:	68db      	ldr	r3, [r3, #12]
 8000548:	4a18      	ldr	r2, [pc, #96]	@ (80005ac <init_uart+0xc4>)
 800054a:	f423 4310 	bic.w	r3, r3, #36864	@ 0x9000
 800054e:	60d3      	str	r3, [r2, #12]
    UART->CR2 &= ~((USART_CR2_STOP_0) | (USART_CR2_STOP_1));
 8000550:	4b16      	ldr	r3, [pc, #88]	@ (80005ac <init_uart+0xc4>)
 8000552:	691b      	ldr	r3, [r3, #16]
 8000554:	4a15      	ldr	r2, [pc, #84]	@ (80005ac <init_uart+0xc4>)
 8000556:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800055a:	6113      	str	r3, [r2, #16]
    if(bps == 9600)
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	f5b3 5f16 	cmp.w	r3, #9600	@ 0x2580
 8000562:	d104      	bne.n	800056e <init_uart+0x86>
    	UART->BRR = UBRR_9600;
 8000564:	4b11      	ldr	r3, [pc, #68]	@ (80005ac <init_uart+0xc4>)
 8000566:	f240 6283 	movw	r2, #1667	@ 0x683
 800056a:	609a      	str	r2, [r3, #8]
 800056c:	e00f      	b.n	800058e <init_uart+0xa6>
    else if(bps == 38400)
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	f5b3 4f16 	cmp.w	r3, #38400	@ 0x9600
 8000574:	d104      	bne.n	8000580 <init_uart+0x98>
    	UART->BRR = UBRR_38400;
 8000576:	4b0d      	ldr	r3, [pc, #52]	@ (80005ac <init_uart+0xc4>)
 8000578:	f240 12a1 	movw	r2, #417	@ 0x1a1
 800057c:	609a      	str	r2, [r3, #8]
 800057e:	e006      	b.n	800058e <init_uart+0xa6>
    else if(bps == 115200)
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	f5b3 3fe1 	cmp.w	r3, #115200	@ 0x1c200
 8000586:	d102      	bne.n	800058e <init_uart+0xa6>
    		UART->BRR = UBRR_115200;
 8000588:	4b08      	ldr	r3, [pc, #32]	@ (80005ac <init_uart+0xc4>)
 800058a:	228b      	movs	r2, #139	@ 0x8b
 800058c:	609a      	str	r2, [r3, #8]

    UART->CR1 |= (BV(USART_CR1_UE_Pos));
 800058e:	4b07      	ldr	r3, [pc, #28]	@ (80005ac <init_uart+0xc4>)
 8000590:	68db      	ldr	r3, [r3, #12]
 8000592:	4a06      	ldr	r2, [pc, #24]	@ (80005ac <init_uart+0xc4>)
 8000594:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000598:	60d3      	str	r3, [r2, #12]
}
 800059a:	bf00      	nop
 800059c:	370c      	adds	r7, #12
 800059e:	46bd      	mov	sp, r7
 80005a0:	bc80      	pop	{r7}
 80005a2:	4770      	bx	lr
 80005a4:	40023800 	.word	0x40023800
 80005a8:	40020000 	.word	0x40020000
 80005ac:	40004400 	.word	0x40004400

080005b0 <uartputc>:


void uartputc(uint8_t ch)
{
 80005b0:	b480      	push	{r7}
 80005b2:	b083      	sub	sp, #12
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	4603      	mov	r3, r0
 80005b8:	71fb      	strb	r3, [r7, #7]
	UART->DR = ch;
 80005ba:	4a08      	ldr	r2, [pc, #32]	@ (80005dc <uartputc+0x2c>)
 80005bc:	79fb      	ldrb	r3, [r7, #7]
 80005be:	6053      	str	r3, [r2, #4]
	while(!(UART->SR & BV(USART_SR_TXE_Pos)))
 80005c0:	bf00      	nop
 80005c2:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <uartputc+0x2c>)
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d0f9      	beq.n	80005c2 <uartputc+0x12>
			;
}
 80005ce:	bf00      	nop
 80005d0:	bf00      	nop
 80005d2:	370c      	adds	r7, #12
 80005d4:	46bd      	mov	sp, r7
 80005d6:	bc80      	pop	{r7}
 80005d8:	4770      	bx	lr
 80005da:	bf00      	nop
 80005dc:	40004400 	.word	0x40004400

080005e0 <uartgetc>:

uint8_t uartgetc(void)
{
 80005e0:	b480      	push	{r7}
 80005e2:	b083      	sub	sp, #12
 80005e4:	af00      	add	r7, sp, #0
    while(!((UART->SR) & BV(USART_SR_RXNE_Pos)));
 80005e6:	bf00      	nop
 80005e8:	4b07      	ldr	r3, [pc, #28]	@ (8000608 <uartgetc+0x28>)
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	f003 0320 	and.w	r3, r3, #32
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d0f9      	beq.n	80005e8 <uartgetc+0x8>
    uint8_t ch = UART->DR;
 80005f4:	4b04      	ldr	r3, [pc, #16]	@ (8000608 <uartgetc+0x28>)
 80005f6:	685b      	ldr	r3, [r3, #4]
 80005f8:	71fb      	strb	r3, [r7, #7]
    return ch;
 80005fa:	79fb      	ldrb	r3, [r7, #7]
}
 80005fc:	4618      	mov	r0, r3
 80005fe:	370c      	adds	r7, #12
 8000600:	46bd      	mov	sp, r7
 8000602:	bc80      	pop	{r7}
 8000604:	4770      	bx	lr
 8000606:	bf00      	nop
 8000608:	40004400 	.word	0x40004400

0800060c <uartputs>:

void uartputs(char str[])
{
 800060c:	b580      	push	{r7, lr}
 800060e:	b084      	sub	sp, #16
 8000610:	af00      	add	r7, sp, #0
 8000612:	6078      	str	r0, [r7, #4]
	for(int i=0; str[i]!='\0'; i++)
 8000614:	2300      	movs	r3, #0
 8000616:	60fb      	str	r3, [r7, #12]
 8000618:	e009      	b.n	800062e <uartputs+0x22>
		uartputc((uint8_t)str[i]);
 800061a:	68fb      	ldr	r3, [r7, #12]
 800061c:	687a      	ldr	r2, [r7, #4]
 800061e:	4413      	add	r3, r2
 8000620:	781b      	ldrb	r3, [r3, #0]
 8000622:	4618      	mov	r0, r3
 8000624:	f7ff ffc4 	bl	80005b0 <uartputc>
	for(int i=0; str[i]!='\0'; i++)
 8000628:	68fb      	ldr	r3, [r7, #12]
 800062a:	3301      	adds	r3, #1
 800062c:	60fb      	str	r3, [r7, #12]
 800062e:	68fb      	ldr	r3, [r7, #12]
 8000630:	687a      	ldr	r2, [r7, #4]
 8000632:	4413      	add	r3, r2
 8000634:	781b      	ldrb	r3, [r3, #0]
 8000636:	2b00      	cmp	r3, #0
 8000638:	d1ef      	bne.n	800061a <uartputs+0xe>
}
 800063a:	bf00      	nop
 800063c:	bf00      	nop
 800063e:	3710      	adds	r7, #16
 8000640:	46bd      	mov	sp, r7
 8000642:	bd80      	pop	{r7, pc}

08000644 <uartgets>:

void uartgets(char str[])
{
 8000644:	b580      	push	{r7, lr}
 8000646:	b084      	sub	sp, #16
 8000648:	af00      	add	r7, sp, #0
 800064a:	6078      	str	r0, [r7, #4]
	char ch;
	int i=0;
 800064c:	2300      	movs	r3, #0
 800064e:	60fb      	str	r3, [r7, #12]
	do
	{
		ch = uartgetc();
 8000650:	f7ff ffc6 	bl	80005e0 <uartgetc>
 8000654:	4603      	mov	r3, r0
 8000656:	72fb      	strb	r3, [r7, #11]
		str[i++] = ch;
 8000658:	68fb      	ldr	r3, [r7, #12]
 800065a:	1c5a      	adds	r2, r3, #1
 800065c:	60fa      	str	r2, [r7, #12]
 800065e:	461a      	mov	r2, r3
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	4413      	add	r3, r2
 8000664:	7afa      	ldrb	r2, [r7, #11]
 8000666:	701a      	strb	r2, [r3, #0]
	}while(ch != '\r');
 8000668:	7afb      	ldrb	r3, [r7, #11]
 800066a:	2b0d      	cmp	r3, #13
 800066c:	d1f0      	bne.n	8000650 <uartgets+0xc>
	str[i++] = '\n';
 800066e:	68fb      	ldr	r3, [r7, #12]
 8000670:	1c5a      	adds	r2, r3, #1
 8000672:	60fa      	str	r2, [r7, #12]
 8000674:	461a      	mov	r2, r3
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	4413      	add	r3, r2
 800067a:	220a      	movs	r2, #10
 800067c:	701a      	strb	r2, [r3, #0]
	str[i] = '\0';
 800067e:	68fb      	ldr	r3, [r7, #12]
 8000680:	687a      	ldr	r2, [r7, #4]
 8000682:	4413      	add	r3, r2
 8000684:	2200      	movs	r2, #0
 8000686:	701a      	strb	r2, [r3, #0]
}
 8000688:	bf00      	nop
 800068a:	3710      	adds	r7, #16
 800068c:	46bd      	mov	sp, r7
 800068e:	bd80      	pop	{r7, pc}

08000690 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000690:	480d      	ldr	r0, [pc, #52]	@ (80006c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000692:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000694:	f7ff fef2 	bl	800047c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000698:	480c      	ldr	r0, [pc, #48]	@ (80006cc <LoopForever+0x6>)
  ldr r1, =_edata
 800069a:	490d      	ldr	r1, [pc, #52]	@ (80006d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800069c:	4a0d      	ldr	r2, [pc, #52]	@ (80006d4 <LoopForever+0xe>)
  movs r3, #0
 800069e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006a0:	e002      	b.n	80006a8 <LoopCopyDataInit>

080006a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006a6:	3304      	adds	r3, #4

080006a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006ac:	d3f9      	bcc.n	80006a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ae:	4a0a      	ldr	r2, [pc, #40]	@ (80006d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006b0:	4c0a      	ldr	r4, [pc, #40]	@ (80006dc <LoopForever+0x16>)
  movs r3, #0
 80006b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006b4:	e001      	b.n	80006ba <LoopFillZerobss>

080006b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b8:	3204      	adds	r2, #4

080006ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006bc:	d3fb      	bcc.n	80006b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006be:	f000 f843 	bl	8000748 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006c2:	f7ff fe5f 	bl	8000384 <main>

080006c6 <LoopForever>:

LoopForever:
  b LoopForever
 80006c6:	e7fe      	b.n	80006c6 <LoopForever>
  ldr   r0, =_estack
 80006c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d0:	20000050 	.word	0x20000050
  ldr r2, =_sidata
 80006d4:	080014d0 	.word	0x080014d0
  ldr r2, =_sbss
 80006d8:	20000050 	.word	0x20000050
  ldr r4, =_ebss
 80006dc:	200001b8 	.word	0x200001b8

080006e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006e0:	e7fe      	b.n	80006e0 <ADC_IRQHandler>
	...

080006e4 <siscanf>:
 80006e4:	b40e      	push	{r1, r2, r3}
 80006e6:	b530      	push	{r4, r5, lr}
 80006e8:	b09c      	sub	sp, #112	@ 0x70
 80006ea:	ac1f      	add	r4, sp, #124	@ 0x7c
 80006ec:	f44f 7201 	mov.w	r2, #516	@ 0x204
 80006f0:	f854 5b04 	ldr.w	r5, [r4], #4
 80006f4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80006f8:	9002      	str	r0, [sp, #8]
 80006fa:	9006      	str	r0, [sp, #24]
 80006fc:	f7ff fd68 	bl	80001d0 <strlen>
 8000700:	4b0b      	ldr	r3, [pc, #44]	@ (8000730 <siscanf+0x4c>)
 8000702:	9003      	str	r0, [sp, #12]
 8000704:	9007      	str	r0, [sp, #28]
 8000706:	930b      	str	r3, [sp, #44]	@ 0x2c
 8000708:	480a      	ldr	r0, [pc, #40]	@ (8000734 <siscanf+0x50>)
 800070a:	9401      	str	r4, [sp, #4]
 800070c:	2300      	movs	r3, #0
 800070e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8000710:	9314      	str	r3, [sp, #80]	@ 0x50
 8000712:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000716:	f8ad 3016 	strh.w	r3, [sp, #22]
 800071a:	462a      	mov	r2, r5
 800071c:	4623      	mov	r3, r4
 800071e:	a902      	add	r1, sp, #8
 8000720:	6800      	ldr	r0, [r0, #0]
 8000722:	f000 f987 	bl	8000a34 <__ssvfiscanf_r>
 8000726:	b01c      	add	sp, #112	@ 0x70
 8000728:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800072c:	b003      	add	sp, #12
 800072e:	4770      	bx	lr
 8000730:	08000739 	.word	0x08000739
 8000734:	20000000 	.word	0x20000000

08000738 <__seofread>:
 8000738:	2000      	movs	r0, #0
 800073a:	4770      	bx	lr

0800073c <__errno>:
 800073c:	4b01      	ldr	r3, [pc, #4]	@ (8000744 <__errno+0x8>)
 800073e:	6818      	ldr	r0, [r3, #0]
 8000740:	4770      	bx	lr
 8000742:	bf00      	nop
 8000744:	20000000 	.word	0x20000000

08000748 <__libc_init_array>:
 8000748:	b570      	push	{r4, r5, r6, lr}
 800074a:	4d0d      	ldr	r5, [pc, #52]	@ (8000780 <__libc_init_array+0x38>)
 800074c:	4c0d      	ldr	r4, [pc, #52]	@ (8000784 <__libc_init_array+0x3c>)
 800074e:	1b64      	subs	r4, r4, r5
 8000750:	10a4      	asrs	r4, r4, #2
 8000752:	2600      	movs	r6, #0
 8000754:	42a6      	cmp	r6, r4
 8000756:	d109      	bne.n	800076c <__libc_init_array+0x24>
 8000758:	4d0b      	ldr	r5, [pc, #44]	@ (8000788 <__libc_init_array+0x40>)
 800075a:	4c0c      	ldr	r4, [pc, #48]	@ (800078c <__libc_init_array+0x44>)
 800075c:	f000 fde0 	bl	8001320 <_init>
 8000760:	1b64      	subs	r4, r4, r5
 8000762:	10a4      	asrs	r4, r4, #2
 8000764:	2600      	movs	r6, #0
 8000766:	42a6      	cmp	r6, r4
 8000768:	d105      	bne.n	8000776 <__libc_init_array+0x2e>
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000770:	4798      	blx	r3
 8000772:	3601      	adds	r6, #1
 8000774:	e7ee      	b.n	8000754 <__libc_init_array+0xc>
 8000776:	f855 3b04 	ldr.w	r3, [r5], #4
 800077a:	4798      	blx	r3
 800077c:	3601      	adds	r6, #1
 800077e:	e7f2      	b.n	8000766 <__libc_init_array+0x1e>
 8000780:	080014c8 	.word	0x080014c8
 8000784:	080014c8 	.word	0x080014c8
 8000788:	080014c8 	.word	0x080014c8
 800078c:	080014cc 	.word	0x080014cc

08000790 <__retarget_lock_acquire_recursive>:
 8000790:	4770      	bx	lr

08000792 <__retarget_lock_release_recursive>:
 8000792:	4770      	bx	lr

08000794 <_free_r>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	4605      	mov	r5, r0
 8000798:	2900      	cmp	r1, #0
 800079a:	d041      	beq.n	8000820 <_free_r+0x8c>
 800079c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007a0:	1f0c      	subs	r4, r1, #4
 80007a2:	2b00      	cmp	r3, #0
 80007a4:	bfb8      	it	lt
 80007a6:	18e4      	addlt	r4, r4, r3
 80007a8:	f000 f8e0 	bl	800096c <__malloc_lock>
 80007ac:	4a1d      	ldr	r2, [pc, #116]	@ (8000824 <_free_r+0x90>)
 80007ae:	6813      	ldr	r3, [r2, #0]
 80007b0:	b933      	cbnz	r3, 80007c0 <_free_r+0x2c>
 80007b2:	6063      	str	r3, [r4, #4]
 80007b4:	6014      	str	r4, [r2, #0]
 80007b6:	4628      	mov	r0, r5
 80007b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007bc:	f000 b8dc 	b.w	8000978 <__malloc_unlock>
 80007c0:	42a3      	cmp	r3, r4
 80007c2:	d908      	bls.n	80007d6 <_free_r+0x42>
 80007c4:	6820      	ldr	r0, [r4, #0]
 80007c6:	1821      	adds	r1, r4, r0
 80007c8:	428b      	cmp	r3, r1
 80007ca:	bf01      	itttt	eq
 80007cc:	6819      	ldreq	r1, [r3, #0]
 80007ce:	685b      	ldreq	r3, [r3, #4]
 80007d0:	1809      	addeq	r1, r1, r0
 80007d2:	6021      	streq	r1, [r4, #0]
 80007d4:	e7ed      	b.n	80007b2 <_free_r+0x1e>
 80007d6:	461a      	mov	r2, r3
 80007d8:	685b      	ldr	r3, [r3, #4]
 80007da:	b10b      	cbz	r3, 80007e0 <_free_r+0x4c>
 80007dc:	42a3      	cmp	r3, r4
 80007de:	d9fa      	bls.n	80007d6 <_free_r+0x42>
 80007e0:	6811      	ldr	r1, [r2, #0]
 80007e2:	1850      	adds	r0, r2, r1
 80007e4:	42a0      	cmp	r0, r4
 80007e6:	d10b      	bne.n	8000800 <_free_r+0x6c>
 80007e8:	6820      	ldr	r0, [r4, #0]
 80007ea:	4401      	add	r1, r0
 80007ec:	1850      	adds	r0, r2, r1
 80007ee:	4283      	cmp	r3, r0
 80007f0:	6011      	str	r1, [r2, #0]
 80007f2:	d1e0      	bne.n	80007b6 <_free_r+0x22>
 80007f4:	6818      	ldr	r0, [r3, #0]
 80007f6:	685b      	ldr	r3, [r3, #4]
 80007f8:	6053      	str	r3, [r2, #4]
 80007fa:	4408      	add	r0, r1
 80007fc:	6010      	str	r0, [r2, #0]
 80007fe:	e7da      	b.n	80007b6 <_free_r+0x22>
 8000800:	d902      	bls.n	8000808 <_free_r+0x74>
 8000802:	230c      	movs	r3, #12
 8000804:	602b      	str	r3, [r5, #0]
 8000806:	e7d6      	b.n	80007b6 <_free_r+0x22>
 8000808:	6820      	ldr	r0, [r4, #0]
 800080a:	1821      	adds	r1, r4, r0
 800080c:	428b      	cmp	r3, r1
 800080e:	bf04      	itt	eq
 8000810:	6819      	ldreq	r1, [r3, #0]
 8000812:	685b      	ldreq	r3, [r3, #4]
 8000814:	6063      	str	r3, [r4, #4]
 8000816:	bf04      	itt	eq
 8000818:	1809      	addeq	r1, r1, r0
 800081a:	6021      	streq	r1, [r4, #0]
 800081c:	6054      	str	r4, [r2, #4]
 800081e:	e7ca      	b.n	80007b6 <_free_r+0x22>
 8000820:	bd38      	pop	{r3, r4, r5, pc}
 8000822:	bf00      	nop
 8000824:	200001b4 	.word	0x200001b4

08000828 <sbrk_aligned>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	4e0f      	ldr	r6, [pc, #60]	@ (8000868 <sbrk_aligned+0x40>)
 800082c:	460c      	mov	r4, r1
 800082e:	6831      	ldr	r1, [r6, #0]
 8000830:	4605      	mov	r5, r0
 8000832:	b911      	cbnz	r1, 800083a <sbrk_aligned+0x12>
 8000834:	f000 fc34 	bl	80010a0 <_sbrk_r>
 8000838:	6030      	str	r0, [r6, #0]
 800083a:	4621      	mov	r1, r4
 800083c:	4628      	mov	r0, r5
 800083e:	f000 fc2f 	bl	80010a0 <_sbrk_r>
 8000842:	1c43      	adds	r3, r0, #1
 8000844:	d103      	bne.n	800084e <sbrk_aligned+0x26>
 8000846:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800084a:	4620      	mov	r0, r4
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	1cc4      	adds	r4, r0, #3
 8000850:	f024 0403 	bic.w	r4, r4, #3
 8000854:	42a0      	cmp	r0, r4
 8000856:	d0f8      	beq.n	800084a <sbrk_aligned+0x22>
 8000858:	1a21      	subs	r1, r4, r0
 800085a:	4628      	mov	r0, r5
 800085c:	f000 fc20 	bl	80010a0 <_sbrk_r>
 8000860:	3001      	adds	r0, #1
 8000862:	d1f2      	bne.n	800084a <sbrk_aligned+0x22>
 8000864:	e7ef      	b.n	8000846 <sbrk_aligned+0x1e>
 8000866:	bf00      	nop
 8000868:	200001b0 	.word	0x200001b0

0800086c <_malloc_r>:
 800086c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000870:	1ccd      	adds	r5, r1, #3
 8000872:	f025 0503 	bic.w	r5, r5, #3
 8000876:	3508      	adds	r5, #8
 8000878:	2d0c      	cmp	r5, #12
 800087a:	bf38      	it	cc
 800087c:	250c      	movcc	r5, #12
 800087e:	2d00      	cmp	r5, #0
 8000880:	4606      	mov	r6, r0
 8000882:	db01      	blt.n	8000888 <_malloc_r+0x1c>
 8000884:	42a9      	cmp	r1, r5
 8000886:	d904      	bls.n	8000892 <_malloc_r+0x26>
 8000888:	230c      	movs	r3, #12
 800088a:	6033      	str	r3, [r6, #0]
 800088c:	2000      	movs	r0, #0
 800088e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000892:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000968 <_malloc_r+0xfc>
 8000896:	f000 f869 	bl	800096c <__malloc_lock>
 800089a:	f8d8 3000 	ldr.w	r3, [r8]
 800089e:	461c      	mov	r4, r3
 80008a0:	bb44      	cbnz	r4, 80008f4 <_malloc_r+0x88>
 80008a2:	4629      	mov	r1, r5
 80008a4:	4630      	mov	r0, r6
 80008a6:	f7ff ffbf 	bl	8000828 <sbrk_aligned>
 80008aa:	1c43      	adds	r3, r0, #1
 80008ac:	4604      	mov	r4, r0
 80008ae:	d158      	bne.n	8000962 <_malloc_r+0xf6>
 80008b0:	f8d8 4000 	ldr.w	r4, [r8]
 80008b4:	4627      	mov	r7, r4
 80008b6:	2f00      	cmp	r7, #0
 80008b8:	d143      	bne.n	8000942 <_malloc_r+0xd6>
 80008ba:	2c00      	cmp	r4, #0
 80008bc:	d04b      	beq.n	8000956 <_malloc_r+0xea>
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4639      	mov	r1, r7
 80008c2:	4630      	mov	r0, r6
 80008c4:	eb04 0903 	add.w	r9, r4, r3
 80008c8:	f000 fbea 	bl	80010a0 <_sbrk_r>
 80008cc:	4581      	cmp	r9, r0
 80008ce:	d142      	bne.n	8000956 <_malloc_r+0xea>
 80008d0:	6821      	ldr	r1, [r4, #0]
 80008d2:	1a6d      	subs	r5, r5, r1
 80008d4:	4629      	mov	r1, r5
 80008d6:	4630      	mov	r0, r6
 80008d8:	f7ff ffa6 	bl	8000828 <sbrk_aligned>
 80008dc:	3001      	adds	r0, #1
 80008de:	d03a      	beq.n	8000956 <_malloc_r+0xea>
 80008e0:	6823      	ldr	r3, [r4, #0]
 80008e2:	442b      	add	r3, r5
 80008e4:	6023      	str	r3, [r4, #0]
 80008e6:	f8d8 3000 	ldr.w	r3, [r8]
 80008ea:	685a      	ldr	r2, [r3, #4]
 80008ec:	bb62      	cbnz	r2, 8000948 <_malloc_r+0xdc>
 80008ee:	f8c8 7000 	str.w	r7, [r8]
 80008f2:	e00f      	b.n	8000914 <_malloc_r+0xa8>
 80008f4:	6822      	ldr	r2, [r4, #0]
 80008f6:	1b52      	subs	r2, r2, r5
 80008f8:	d420      	bmi.n	800093c <_malloc_r+0xd0>
 80008fa:	2a0b      	cmp	r2, #11
 80008fc:	d917      	bls.n	800092e <_malloc_r+0xc2>
 80008fe:	1961      	adds	r1, r4, r5
 8000900:	42a3      	cmp	r3, r4
 8000902:	6025      	str	r5, [r4, #0]
 8000904:	bf18      	it	ne
 8000906:	6059      	strne	r1, [r3, #4]
 8000908:	6863      	ldr	r3, [r4, #4]
 800090a:	bf08      	it	eq
 800090c:	f8c8 1000 	streq.w	r1, [r8]
 8000910:	5162      	str	r2, [r4, r5]
 8000912:	604b      	str	r3, [r1, #4]
 8000914:	4630      	mov	r0, r6
 8000916:	f000 f82f 	bl	8000978 <__malloc_unlock>
 800091a:	f104 000b 	add.w	r0, r4, #11
 800091e:	1d23      	adds	r3, r4, #4
 8000920:	f020 0007 	bic.w	r0, r0, #7
 8000924:	1ac2      	subs	r2, r0, r3
 8000926:	bf1c      	itt	ne
 8000928:	1a1b      	subne	r3, r3, r0
 800092a:	50a3      	strne	r3, [r4, r2]
 800092c:	e7af      	b.n	800088e <_malloc_r+0x22>
 800092e:	6862      	ldr	r2, [r4, #4]
 8000930:	42a3      	cmp	r3, r4
 8000932:	bf0c      	ite	eq
 8000934:	f8c8 2000 	streq.w	r2, [r8]
 8000938:	605a      	strne	r2, [r3, #4]
 800093a:	e7eb      	b.n	8000914 <_malloc_r+0xa8>
 800093c:	4623      	mov	r3, r4
 800093e:	6864      	ldr	r4, [r4, #4]
 8000940:	e7ae      	b.n	80008a0 <_malloc_r+0x34>
 8000942:	463c      	mov	r4, r7
 8000944:	687f      	ldr	r7, [r7, #4]
 8000946:	e7b6      	b.n	80008b6 <_malloc_r+0x4a>
 8000948:	461a      	mov	r2, r3
 800094a:	685b      	ldr	r3, [r3, #4]
 800094c:	42a3      	cmp	r3, r4
 800094e:	d1fb      	bne.n	8000948 <_malloc_r+0xdc>
 8000950:	2300      	movs	r3, #0
 8000952:	6053      	str	r3, [r2, #4]
 8000954:	e7de      	b.n	8000914 <_malloc_r+0xa8>
 8000956:	230c      	movs	r3, #12
 8000958:	6033      	str	r3, [r6, #0]
 800095a:	4630      	mov	r0, r6
 800095c:	f000 f80c 	bl	8000978 <__malloc_unlock>
 8000960:	e794      	b.n	800088c <_malloc_r+0x20>
 8000962:	6005      	str	r5, [r0, #0]
 8000964:	e7d6      	b.n	8000914 <_malloc_r+0xa8>
 8000966:	bf00      	nop
 8000968:	200001b4 	.word	0x200001b4

0800096c <__malloc_lock>:
 800096c:	4801      	ldr	r0, [pc, #4]	@ (8000974 <__malloc_lock+0x8>)
 800096e:	f7ff bf0f 	b.w	8000790 <__retarget_lock_acquire_recursive>
 8000972:	bf00      	nop
 8000974:	200001ac 	.word	0x200001ac

08000978 <__malloc_unlock>:
 8000978:	4801      	ldr	r0, [pc, #4]	@ (8000980 <__malloc_unlock+0x8>)
 800097a:	f7ff bf0a 	b.w	8000792 <__retarget_lock_release_recursive>
 800097e:	bf00      	nop
 8000980:	200001ac 	.word	0x200001ac

08000984 <_sungetc_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	1c4b      	adds	r3, r1, #1
 8000988:	4614      	mov	r4, r2
 800098a:	d103      	bne.n	8000994 <_sungetc_r+0x10>
 800098c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8000990:	4628      	mov	r0, r5
 8000992:	bd38      	pop	{r3, r4, r5, pc}
 8000994:	8993      	ldrh	r3, [r2, #12]
 8000996:	f023 0320 	bic.w	r3, r3, #32
 800099a:	8193      	strh	r3, [r2, #12]
 800099c:	6853      	ldr	r3, [r2, #4]
 800099e:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 80009a0:	b2cd      	uxtb	r5, r1
 80009a2:	b18a      	cbz	r2, 80009c8 <_sungetc_r+0x44>
 80009a4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80009a6:	429a      	cmp	r2, r3
 80009a8:	dd08      	ble.n	80009bc <_sungetc_r+0x38>
 80009aa:	6823      	ldr	r3, [r4, #0]
 80009ac:	1e5a      	subs	r2, r3, #1
 80009ae:	6022      	str	r2, [r4, #0]
 80009b0:	f803 5c01 	strb.w	r5, [r3, #-1]
 80009b4:	6863      	ldr	r3, [r4, #4]
 80009b6:	3301      	adds	r3, #1
 80009b8:	6063      	str	r3, [r4, #4]
 80009ba:	e7e9      	b.n	8000990 <_sungetc_r+0xc>
 80009bc:	4621      	mov	r1, r4
 80009be:	f000 fb34 	bl	800102a <__submore>
 80009c2:	2800      	cmp	r0, #0
 80009c4:	d0f1      	beq.n	80009aa <_sungetc_r+0x26>
 80009c6:	e7e1      	b.n	800098c <_sungetc_r+0x8>
 80009c8:	6921      	ldr	r1, [r4, #16]
 80009ca:	6822      	ldr	r2, [r4, #0]
 80009cc:	b141      	cbz	r1, 80009e0 <_sungetc_r+0x5c>
 80009ce:	4291      	cmp	r1, r2
 80009d0:	d206      	bcs.n	80009e0 <_sungetc_r+0x5c>
 80009d2:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80009d6:	42a9      	cmp	r1, r5
 80009d8:	d102      	bne.n	80009e0 <_sungetc_r+0x5c>
 80009da:	3a01      	subs	r2, #1
 80009dc:	6022      	str	r2, [r4, #0]
 80009de:	e7ea      	b.n	80009b6 <_sungetc_r+0x32>
 80009e0:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 80009e4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80009e8:	6363      	str	r3, [r4, #52]	@ 0x34
 80009ea:	2303      	movs	r3, #3
 80009ec:	63a3      	str	r3, [r4, #56]	@ 0x38
 80009ee:	4623      	mov	r3, r4
 80009f0:	f803 5f46 	strb.w	r5, [r3, #70]!
 80009f4:	6023      	str	r3, [r4, #0]
 80009f6:	2301      	movs	r3, #1
 80009f8:	e7de      	b.n	80009b8 <_sungetc_r+0x34>

080009fa <__ssrefill_r>:
 80009fa:	b510      	push	{r4, lr}
 80009fc:	460c      	mov	r4, r1
 80009fe:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8000a00:	b169      	cbz	r1, 8000a1e <__ssrefill_r+0x24>
 8000a02:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000a06:	4299      	cmp	r1, r3
 8000a08:	d001      	beq.n	8000a0e <__ssrefill_r+0x14>
 8000a0a:	f7ff fec3 	bl	8000794 <_free_r>
 8000a0e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000a10:	6063      	str	r3, [r4, #4]
 8000a12:	2000      	movs	r0, #0
 8000a14:	6360      	str	r0, [r4, #52]	@ 0x34
 8000a16:	b113      	cbz	r3, 8000a1e <__ssrefill_r+0x24>
 8000a18:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8000a1a:	6023      	str	r3, [r4, #0]
 8000a1c:	bd10      	pop	{r4, pc}
 8000a1e:	6923      	ldr	r3, [r4, #16]
 8000a20:	6023      	str	r3, [r4, #0]
 8000a22:	2300      	movs	r3, #0
 8000a24:	6063      	str	r3, [r4, #4]
 8000a26:	89a3      	ldrh	r3, [r4, #12]
 8000a28:	f043 0320 	orr.w	r3, r3, #32
 8000a2c:	81a3      	strh	r3, [r4, #12]
 8000a2e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000a32:	e7f3      	b.n	8000a1c <__ssrefill_r+0x22>

08000a34 <__ssvfiscanf_r>:
 8000a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a38:	460c      	mov	r4, r1
 8000a3a:	f5ad 7d22 	sub.w	sp, sp, #648	@ 0x288
 8000a3e:	2100      	movs	r1, #0
 8000a40:	e9cd 1144 	strd	r1, r1, [sp, #272]	@ 0x110
 8000a44:	49a5      	ldr	r1, [pc, #660]	@ (8000cdc <__ssvfiscanf_r+0x2a8>)
 8000a46:	91a0      	str	r1, [sp, #640]	@ 0x280
 8000a48:	f10d 0804 	add.w	r8, sp, #4
 8000a4c:	49a4      	ldr	r1, [pc, #656]	@ (8000ce0 <__ssvfiscanf_r+0x2ac>)
 8000a4e:	4fa5      	ldr	r7, [pc, #660]	@ (8000ce4 <__ssvfiscanf_r+0x2b0>)
 8000a50:	f8cd 8118 	str.w	r8, [sp, #280]	@ 0x118
 8000a54:	4606      	mov	r6, r0
 8000a56:	91a1      	str	r1, [sp, #644]	@ 0x284
 8000a58:	9300      	str	r3, [sp, #0]
 8000a5a:	7813      	ldrb	r3, [r2, #0]
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	f000 8158 	beq.w	8000d12 <__ssvfiscanf_r+0x2de>
 8000a62:	5cf9      	ldrb	r1, [r7, r3]
 8000a64:	f011 0108 	ands.w	r1, r1, #8
 8000a68:	f102 0501 	add.w	r5, r2, #1
 8000a6c:	d019      	beq.n	8000aa2 <__ssvfiscanf_r+0x6e>
 8000a6e:	6863      	ldr	r3, [r4, #4]
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	dd0f      	ble.n	8000a94 <__ssvfiscanf_r+0x60>
 8000a74:	6823      	ldr	r3, [r4, #0]
 8000a76:	781a      	ldrb	r2, [r3, #0]
 8000a78:	5cba      	ldrb	r2, [r7, r2]
 8000a7a:	0712      	lsls	r2, r2, #28
 8000a7c:	d401      	bmi.n	8000a82 <__ssvfiscanf_r+0x4e>
 8000a7e:	462a      	mov	r2, r5
 8000a80:	e7eb      	b.n	8000a5a <__ssvfiscanf_r+0x26>
 8000a82:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000a84:	3201      	adds	r2, #1
 8000a86:	9245      	str	r2, [sp, #276]	@ 0x114
 8000a88:	6862      	ldr	r2, [r4, #4]
 8000a8a:	3301      	adds	r3, #1
 8000a8c:	3a01      	subs	r2, #1
 8000a8e:	6062      	str	r2, [r4, #4]
 8000a90:	6023      	str	r3, [r4, #0]
 8000a92:	e7ec      	b.n	8000a6e <__ssvfiscanf_r+0x3a>
 8000a94:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000a96:	4621      	mov	r1, r4
 8000a98:	4630      	mov	r0, r6
 8000a9a:	4798      	blx	r3
 8000a9c:	2800      	cmp	r0, #0
 8000a9e:	d0e9      	beq.n	8000a74 <__ssvfiscanf_r+0x40>
 8000aa0:	e7ed      	b.n	8000a7e <__ssvfiscanf_r+0x4a>
 8000aa2:	2b25      	cmp	r3, #37	@ 0x25
 8000aa4:	d012      	beq.n	8000acc <__ssvfiscanf_r+0x98>
 8000aa6:	4699      	mov	r9, r3
 8000aa8:	6863      	ldr	r3, [r4, #4]
 8000aaa:	2b00      	cmp	r3, #0
 8000aac:	f340 8093 	ble.w	8000bd6 <__ssvfiscanf_r+0x1a2>
 8000ab0:	6822      	ldr	r2, [r4, #0]
 8000ab2:	7813      	ldrb	r3, [r2, #0]
 8000ab4:	454b      	cmp	r3, r9
 8000ab6:	f040 812c 	bne.w	8000d12 <__ssvfiscanf_r+0x2de>
 8000aba:	6863      	ldr	r3, [r4, #4]
 8000abc:	3b01      	subs	r3, #1
 8000abe:	6063      	str	r3, [r4, #4]
 8000ac0:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 8000ac2:	3201      	adds	r2, #1
 8000ac4:	3301      	adds	r3, #1
 8000ac6:	6022      	str	r2, [r4, #0]
 8000ac8:	9345      	str	r3, [sp, #276]	@ 0x114
 8000aca:	e7d8      	b.n	8000a7e <__ssvfiscanf_r+0x4a>
 8000acc:	9141      	str	r1, [sp, #260]	@ 0x104
 8000ace:	9143      	str	r1, [sp, #268]	@ 0x10c
 8000ad0:	7853      	ldrb	r3, [r2, #1]
 8000ad2:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ad4:	bf02      	ittt	eq
 8000ad6:	2310      	moveq	r3, #16
 8000ad8:	1c95      	addeq	r5, r2, #2
 8000ada:	9341      	streq	r3, [sp, #260]	@ 0x104
 8000adc:	220a      	movs	r2, #10
 8000ade:	46a9      	mov	r9, r5
 8000ae0:	f819 1b01 	ldrb.w	r1, [r9], #1
 8000ae4:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 8000ae8:	2b09      	cmp	r3, #9
 8000aea:	d91e      	bls.n	8000b2a <__ssvfiscanf_r+0xf6>
 8000aec:	f8df a1f8 	ldr.w	sl, [pc, #504]	@ 8000ce8 <__ssvfiscanf_r+0x2b4>
 8000af0:	2203      	movs	r2, #3
 8000af2:	4650      	mov	r0, sl
 8000af4:	f7ff fb74 	bl	80001e0 <memchr>
 8000af8:	b138      	cbz	r0, 8000b0a <__ssvfiscanf_r+0xd6>
 8000afa:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000afc:	eba0 000a 	sub.w	r0, r0, sl
 8000b00:	2301      	movs	r3, #1
 8000b02:	4083      	lsls	r3, r0
 8000b04:	4313      	orrs	r3, r2
 8000b06:	9341      	str	r3, [sp, #260]	@ 0x104
 8000b08:	464d      	mov	r5, r9
 8000b0a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000b0e:	2b78      	cmp	r3, #120	@ 0x78
 8000b10:	d806      	bhi.n	8000b20 <__ssvfiscanf_r+0xec>
 8000b12:	2b57      	cmp	r3, #87	@ 0x57
 8000b14:	d810      	bhi.n	8000b38 <__ssvfiscanf_r+0x104>
 8000b16:	2b25      	cmp	r3, #37	@ 0x25
 8000b18:	d0c5      	beq.n	8000aa6 <__ssvfiscanf_r+0x72>
 8000b1a:	d857      	bhi.n	8000bcc <__ssvfiscanf_r+0x198>
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d065      	beq.n	8000bec <__ssvfiscanf_r+0x1b8>
 8000b20:	2303      	movs	r3, #3
 8000b22:	9347      	str	r3, [sp, #284]	@ 0x11c
 8000b24:	230a      	movs	r3, #10
 8000b26:	9342      	str	r3, [sp, #264]	@ 0x108
 8000b28:	e078      	b.n	8000c1c <__ssvfiscanf_r+0x1e8>
 8000b2a:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8000b2c:	fb02 1103 	mla	r1, r2, r3, r1
 8000b30:	3930      	subs	r1, #48	@ 0x30
 8000b32:	9143      	str	r1, [sp, #268]	@ 0x10c
 8000b34:	464d      	mov	r5, r9
 8000b36:	e7d2      	b.n	8000ade <__ssvfiscanf_r+0xaa>
 8000b38:	f1a3 0258 	sub.w	r2, r3, #88	@ 0x58
 8000b3c:	2a20      	cmp	r2, #32
 8000b3e:	d8ef      	bhi.n	8000b20 <__ssvfiscanf_r+0xec>
 8000b40:	a101      	add	r1, pc, #4	@ (adr r1, 8000b48 <__ssvfiscanf_r+0x114>)
 8000b42:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8000b46:	bf00      	nop
 8000b48:	08000bfb 	.word	0x08000bfb
 8000b4c:	08000b21 	.word	0x08000b21
 8000b50:	08000b21 	.word	0x08000b21
 8000b54:	08000c55 	.word	0x08000c55
 8000b58:	08000b21 	.word	0x08000b21
 8000b5c:	08000b21 	.word	0x08000b21
 8000b60:	08000b21 	.word	0x08000b21
 8000b64:	08000b21 	.word	0x08000b21
 8000b68:	08000b21 	.word	0x08000b21
 8000b6c:	08000b21 	.word	0x08000b21
 8000b70:	08000b21 	.word	0x08000b21
 8000b74:	08000c6b 	.word	0x08000c6b
 8000b78:	08000c51 	.word	0x08000c51
 8000b7c:	08000bd3 	.word	0x08000bd3
 8000b80:	08000bd3 	.word	0x08000bd3
 8000b84:	08000bd3 	.word	0x08000bd3
 8000b88:	08000b21 	.word	0x08000b21
 8000b8c:	08000c0d 	.word	0x08000c0d
 8000b90:	08000b21 	.word	0x08000b21
 8000b94:	08000b21 	.word	0x08000b21
 8000b98:	08000b21 	.word	0x08000b21
 8000b9c:	08000b21 	.word	0x08000b21
 8000ba0:	08000c7b 	.word	0x08000c7b
 8000ba4:	08000c15 	.word	0x08000c15
 8000ba8:	08000bf3 	.word	0x08000bf3
 8000bac:	08000b21 	.word	0x08000b21
 8000bb0:	08000b21 	.word	0x08000b21
 8000bb4:	08000c77 	.word	0x08000c77
 8000bb8:	08000b21 	.word	0x08000b21
 8000bbc:	08000c51 	.word	0x08000c51
 8000bc0:	08000b21 	.word	0x08000b21
 8000bc4:	08000b21 	.word	0x08000b21
 8000bc8:	08000bfb 	.word	0x08000bfb
 8000bcc:	3b45      	subs	r3, #69	@ 0x45
 8000bce:	2b02      	cmp	r3, #2
 8000bd0:	d8a6      	bhi.n	8000b20 <__ssvfiscanf_r+0xec>
 8000bd2:	2305      	movs	r3, #5
 8000bd4:	e021      	b.n	8000c1a <__ssvfiscanf_r+0x1e6>
 8000bd6:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000bd8:	4621      	mov	r1, r4
 8000bda:	4630      	mov	r0, r6
 8000bdc:	4798      	blx	r3
 8000bde:	2800      	cmp	r0, #0
 8000be0:	f43f af66 	beq.w	8000ab0 <__ssvfiscanf_r+0x7c>
 8000be4:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8000be6:	2800      	cmp	r0, #0
 8000be8:	f040 808b 	bne.w	8000d02 <__ssvfiscanf_r+0x2ce>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bf0:	e08b      	b.n	8000d0a <__ssvfiscanf_r+0x2d6>
 8000bf2:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000bf4:	f042 0220 	orr.w	r2, r2, #32
 8000bf8:	9241      	str	r2, [sp, #260]	@ 0x104
 8000bfa:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8000bfc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000c00:	9241      	str	r2, [sp, #260]	@ 0x104
 8000c02:	2210      	movs	r2, #16
 8000c04:	2b6e      	cmp	r3, #110	@ 0x6e
 8000c06:	9242      	str	r2, [sp, #264]	@ 0x108
 8000c08:	d902      	bls.n	8000c10 <__ssvfiscanf_r+0x1dc>
 8000c0a:	e005      	b.n	8000c18 <__ssvfiscanf_r+0x1e4>
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	9342      	str	r3, [sp, #264]	@ 0x108
 8000c10:	2303      	movs	r3, #3
 8000c12:	e002      	b.n	8000c1a <__ssvfiscanf_r+0x1e6>
 8000c14:	2308      	movs	r3, #8
 8000c16:	9342      	str	r3, [sp, #264]	@ 0x108
 8000c18:	2304      	movs	r3, #4
 8000c1a:	9347      	str	r3, [sp, #284]	@ 0x11c
 8000c1c:	6863      	ldr	r3, [r4, #4]
 8000c1e:	2b00      	cmp	r3, #0
 8000c20:	dd39      	ble.n	8000c96 <__ssvfiscanf_r+0x262>
 8000c22:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000c24:	0659      	lsls	r1, r3, #25
 8000c26:	d404      	bmi.n	8000c32 <__ssvfiscanf_r+0x1fe>
 8000c28:	6823      	ldr	r3, [r4, #0]
 8000c2a:	781a      	ldrb	r2, [r3, #0]
 8000c2c:	5cba      	ldrb	r2, [r7, r2]
 8000c2e:	0712      	lsls	r2, r2, #28
 8000c30:	d438      	bmi.n	8000ca4 <__ssvfiscanf_r+0x270>
 8000c32:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 8000c34:	2b02      	cmp	r3, #2
 8000c36:	dc47      	bgt.n	8000cc8 <__ssvfiscanf_r+0x294>
 8000c38:	466b      	mov	r3, sp
 8000c3a:	4622      	mov	r2, r4
 8000c3c:	a941      	add	r1, sp, #260	@ 0x104
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f000 f86c 	bl	8000d1c <_scanf_chars>
 8000c44:	2801      	cmp	r0, #1
 8000c46:	d064      	beq.n	8000d12 <__ssvfiscanf_r+0x2de>
 8000c48:	2802      	cmp	r0, #2
 8000c4a:	f47f af18 	bne.w	8000a7e <__ssvfiscanf_r+0x4a>
 8000c4e:	e7c9      	b.n	8000be4 <__ssvfiscanf_r+0x1b0>
 8000c50:	220a      	movs	r2, #10
 8000c52:	e7d7      	b.n	8000c04 <__ssvfiscanf_r+0x1d0>
 8000c54:	4629      	mov	r1, r5
 8000c56:	4640      	mov	r0, r8
 8000c58:	f000 f9ae 	bl	8000fb8 <__sccl>
 8000c5c:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000c5e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c62:	9341      	str	r3, [sp, #260]	@ 0x104
 8000c64:	4605      	mov	r5, r0
 8000c66:	2301      	movs	r3, #1
 8000c68:	e7d7      	b.n	8000c1a <__ssvfiscanf_r+0x1e6>
 8000c6a:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8000c6c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c70:	9341      	str	r3, [sp, #260]	@ 0x104
 8000c72:	2300      	movs	r3, #0
 8000c74:	e7d1      	b.n	8000c1a <__ssvfiscanf_r+0x1e6>
 8000c76:	2302      	movs	r3, #2
 8000c78:	e7cf      	b.n	8000c1a <__ssvfiscanf_r+0x1e6>
 8000c7a:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8000c7c:	06c3      	lsls	r3, r0, #27
 8000c7e:	f53f aefe 	bmi.w	8000a7e <__ssvfiscanf_r+0x4a>
 8000c82:	9b00      	ldr	r3, [sp, #0]
 8000c84:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000c86:	1d19      	adds	r1, r3, #4
 8000c88:	9100      	str	r1, [sp, #0]
 8000c8a:	681b      	ldr	r3, [r3, #0]
 8000c8c:	07c0      	lsls	r0, r0, #31
 8000c8e:	bf4c      	ite	mi
 8000c90:	801a      	strhmi	r2, [r3, #0]
 8000c92:	601a      	strpl	r2, [r3, #0]
 8000c94:	e6f3      	b.n	8000a7e <__ssvfiscanf_r+0x4a>
 8000c96:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000c98:	4621      	mov	r1, r4
 8000c9a:	4630      	mov	r0, r6
 8000c9c:	4798      	blx	r3
 8000c9e:	2800      	cmp	r0, #0
 8000ca0:	d0bf      	beq.n	8000c22 <__ssvfiscanf_r+0x1ee>
 8000ca2:	e79f      	b.n	8000be4 <__ssvfiscanf_r+0x1b0>
 8000ca4:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 8000ca6:	3201      	adds	r2, #1
 8000ca8:	9245      	str	r2, [sp, #276]	@ 0x114
 8000caa:	6862      	ldr	r2, [r4, #4]
 8000cac:	3a01      	subs	r2, #1
 8000cae:	2a00      	cmp	r2, #0
 8000cb0:	6062      	str	r2, [r4, #4]
 8000cb2:	dd02      	ble.n	8000cba <__ssvfiscanf_r+0x286>
 8000cb4:	3301      	adds	r3, #1
 8000cb6:	6023      	str	r3, [r4, #0]
 8000cb8:	e7b6      	b.n	8000c28 <__ssvfiscanf_r+0x1f4>
 8000cba:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8000cbc:	4621      	mov	r1, r4
 8000cbe:	4630      	mov	r0, r6
 8000cc0:	4798      	blx	r3
 8000cc2:	2800      	cmp	r0, #0
 8000cc4:	d0b0      	beq.n	8000c28 <__ssvfiscanf_r+0x1f4>
 8000cc6:	e78d      	b.n	8000be4 <__ssvfiscanf_r+0x1b0>
 8000cc8:	2b04      	cmp	r3, #4
 8000cca:	dc0f      	bgt.n	8000cec <__ssvfiscanf_r+0x2b8>
 8000ccc:	466b      	mov	r3, sp
 8000cce:	4622      	mov	r2, r4
 8000cd0:	a941      	add	r1, sp, #260	@ 0x104
 8000cd2:	4630      	mov	r0, r6
 8000cd4:	f000 f87c 	bl	8000dd0 <_scanf_i>
 8000cd8:	e7b4      	b.n	8000c44 <__ssvfiscanf_r+0x210>
 8000cda:	bf00      	nop
 8000cdc:	08000985 	.word	0x08000985
 8000ce0:	080009fb 	.word	0x080009fb
 8000ce4:	080013c0 	.word	0x080013c0
 8000ce8:	080013a0 	.word	0x080013a0
 8000cec:	4b0a      	ldr	r3, [pc, #40]	@ (8000d18 <__ssvfiscanf_r+0x2e4>)
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	f43f aec5 	beq.w	8000a7e <__ssvfiscanf_r+0x4a>
 8000cf4:	466b      	mov	r3, sp
 8000cf6:	4622      	mov	r2, r4
 8000cf8:	a941      	add	r1, sp, #260	@ 0x104
 8000cfa:	4630      	mov	r0, r6
 8000cfc:	f3af 8000 	nop.w
 8000d00:	e7a0      	b.n	8000c44 <__ssvfiscanf_r+0x210>
 8000d02:	89a3      	ldrh	r3, [r4, #12]
 8000d04:	065b      	lsls	r3, r3, #25
 8000d06:	f53f af71 	bmi.w	8000bec <__ssvfiscanf_r+0x1b8>
 8000d0a:	f50d 7d22 	add.w	sp, sp, #648	@ 0x288
 8000d0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d12:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8000d14:	e7f9      	b.n	8000d0a <__ssvfiscanf_r+0x2d6>
 8000d16:	bf00      	nop
 8000d18:	00000000 	.word	0x00000000

08000d1c <_scanf_chars>:
 8000d1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000d20:	4615      	mov	r5, r2
 8000d22:	688a      	ldr	r2, [r1, #8]
 8000d24:	4680      	mov	r8, r0
 8000d26:	460c      	mov	r4, r1
 8000d28:	b932      	cbnz	r2, 8000d38 <_scanf_chars+0x1c>
 8000d2a:	698a      	ldr	r2, [r1, #24]
 8000d2c:	2a00      	cmp	r2, #0
 8000d2e:	bf14      	ite	ne
 8000d30:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 8000d34:	2201      	moveq	r2, #1
 8000d36:	608a      	str	r2, [r1, #8]
 8000d38:	6822      	ldr	r2, [r4, #0]
 8000d3a:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8000dcc <_scanf_chars+0xb0>
 8000d3e:	06d1      	lsls	r1, r2, #27
 8000d40:	bf5f      	itttt	pl
 8000d42:	681a      	ldrpl	r2, [r3, #0]
 8000d44:	1d11      	addpl	r1, r2, #4
 8000d46:	6019      	strpl	r1, [r3, #0]
 8000d48:	6816      	ldrpl	r6, [r2, #0]
 8000d4a:	2700      	movs	r7, #0
 8000d4c:	69a0      	ldr	r0, [r4, #24]
 8000d4e:	b188      	cbz	r0, 8000d74 <_scanf_chars+0x58>
 8000d50:	2801      	cmp	r0, #1
 8000d52:	d107      	bne.n	8000d64 <_scanf_chars+0x48>
 8000d54:	682b      	ldr	r3, [r5, #0]
 8000d56:	781a      	ldrb	r2, [r3, #0]
 8000d58:	6963      	ldr	r3, [r4, #20]
 8000d5a:	5c9b      	ldrb	r3, [r3, r2]
 8000d5c:	b953      	cbnz	r3, 8000d74 <_scanf_chars+0x58>
 8000d5e:	2f00      	cmp	r7, #0
 8000d60:	d031      	beq.n	8000dc6 <_scanf_chars+0xaa>
 8000d62:	e022      	b.n	8000daa <_scanf_chars+0x8e>
 8000d64:	2802      	cmp	r0, #2
 8000d66:	d120      	bne.n	8000daa <_scanf_chars+0x8e>
 8000d68:	682b      	ldr	r3, [r5, #0]
 8000d6a:	781b      	ldrb	r3, [r3, #0]
 8000d6c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8000d70:	071b      	lsls	r3, r3, #28
 8000d72:	d41a      	bmi.n	8000daa <_scanf_chars+0x8e>
 8000d74:	6823      	ldr	r3, [r4, #0]
 8000d76:	06da      	lsls	r2, r3, #27
 8000d78:	bf5e      	ittt	pl
 8000d7a:	682b      	ldrpl	r3, [r5, #0]
 8000d7c:	781b      	ldrbpl	r3, [r3, #0]
 8000d7e:	f806 3b01 	strbpl.w	r3, [r6], #1
 8000d82:	682a      	ldr	r2, [r5, #0]
 8000d84:	686b      	ldr	r3, [r5, #4]
 8000d86:	3201      	adds	r2, #1
 8000d88:	602a      	str	r2, [r5, #0]
 8000d8a:	68a2      	ldr	r2, [r4, #8]
 8000d8c:	3b01      	subs	r3, #1
 8000d8e:	3a01      	subs	r2, #1
 8000d90:	606b      	str	r3, [r5, #4]
 8000d92:	3701      	adds	r7, #1
 8000d94:	60a2      	str	r2, [r4, #8]
 8000d96:	b142      	cbz	r2, 8000daa <_scanf_chars+0x8e>
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	dcd7      	bgt.n	8000d4c <_scanf_chars+0x30>
 8000d9c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8000da0:	4629      	mov	r1, r5
 8000da2:	4640      	mov	r0, r8
 8000da4:	4798      	blx	r3
 8000da6:	2800      	cmp	r0, #0
 8000da8:	d0d0      	beq.n	8000d4c <_scanf_chars+0x30>
 8000daa:	6823      	ldr	r3, [r4, #0]
 8000dac:	f013 0310 	ands.w	r3, r3, #16
 8000db0:	d105      	bne.n	8000dbe <_scanf_chars+0xa2>
 8000db2:	68e2      	ldr	r2, [r4, #12]
 8000db4:	3201      	adds	r2, #1
 8000db6:	60e2      	str	r2, [r4, #12]
 8000db8:	69a2      	ldr	r2, [r4, #24]
 8000dba:	b102      	cbz	r2, 8000dbe <_scanf_chars+0xa2>
 8000dbc:	7033      	strb	r3, [r6, #0]
 8000dbe:	6923      	ldr	r3, [r4, #16]
 8000dc0:	443b      	add	r3, r7
 8000dc2:	6123      	str	r3, [r4, #16]
 8000dc4:	2000      	movs	r0, #0
 8000dc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000dca:	bf00      	nop
 8000dcc:	080013c0 	.word	0x080013c0

08000dd0 <_scanf_i>:
 8000dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dd4:	4698      	mov	r8, r3
 8000dd6:	4b74      	ldr	r3, [pc, #464]	@ (8000fa8 <_scanf_i+0x1d8>)
 8000dd8:	460c      	mov	r4, r1
 8000dda:	4682      	mov	sl, r0
 8000ddc:	4616      	mov	r6, r2
 8000dde:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8000de2:	b087      	sub	sp, #28
 8000de4:	ab03      	add	r3, sp, #12
 8000de6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000dea:	4b70      	ldr	r3, [pc, #448]	@ (8000fac <_scanf_i+0x1dc>)
 8000dec:	69a1      	ldr	r1, [r4, #24]
 8000dee:	4a70      	ldr	r2, [pc, #448]	@ (8000fb0 <_scanf_i+0x1e0>)
 8000df0:	2903      	cmp	r1, #3
 8000df2:	bf08      	it	eq
 8000df4:	461a      	moveq	r2, r3
 8000df6:	68a3      	ldr	r3, [r4, #8]
 8000df8:	9201      	str	r2, [sp, #4]
 8000dfa:	1e5a      	subs	r2, r3, #1
 8000dfc:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8000e00:	bf88      	it	hi
 8000e02:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8000e06:	4627      	mov	r7, r4
 8000e08:	bf82      	ittt	hi
 8000e0a:	eb03 0905 	addhi.w	r9, r3, r5
 8000e0e:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8000e12:	60a3      	strhi	r3, [r4, #8]
 8000e14:	f857 3b1c 	ldr.w	r3, [r7], #28
 8000e18:	f443 6350 	orr.w	r3, r3, #3328	@ 0xd00
 8000e1c:	bf98      	it	ls
 8000e1e:	f04f 0900 	movls.w	r9, #0
 8000e22:	6023      	str	r3, [r4, #0]
 8000e24:	463d      	mov	r5, r7
 8000e26:	f04f 0b00 	mov.w	fp, #0
 8000e2a:	6831      	ldr	r1, [r6, #0]
 8000e2c:	ab03      	add	r3, sp, #12
 8000e2e:	7809      	ldrb	r1, [r1, #0]
 8000e30:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8000e34:	2202      	movs	r2, #2
 8000e36:	f7ff f9d3 	bl	80001e0 <memchr>
 8000e3a:	b328      	cbz	r0, 8000e88 <_scanf_i+0xb8>
 8000e3c:	f1bb 0f01 	cmp.w	fp, #1
 8000e40:	d159      	bne.n	8000ef6 <_scanf_i+0x126>
 8000e42:	6862      	ldr	r2, [r4, #4]
 8000e44:	b92a      	cbnz	r2, 8000e52 <_scanf_i+0x82>
 8000e46:	6822      	ldr	r2, [r4, #0]
 8000e48:	2108      	movs	r1, #8
 8000e4a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000e4e:	6061      	str	r1, [r4, #4]
 8000e50:	6022      	str	r2, [r4, #0]
 8000e52:	6822      	ldr	r2, [r4, #0]
 8000e54:	f422 62a0 	bic.w	r2, r2, #1280	@ 0x500
 8000e58:	6022      	str	r2, [r4, #0]
 8000e5a:	68a2      	ldr	r2, [r4, #8]
 8000e5c:	1e51      	subs	r1, r2, #1
 8000e5e:	60a1      	str	r1, [r4, #8]
 8000e60:	b192      	cbz	r2, 8000e88 <_scanf_i+0xb8>
 8000e62:	6832      	ldr	r2, [r6, #0]
 8000e64:	1c51      	adds	r1, r2, #1
 8000e66:	6031      	str	r1, [r6, #0]
 8000e68:	7812      	ldrb	r2, [r2, #0]
 8000e6a:	f805 2b01 	strb.w	r2, [r5], #1
 8000e6e:	6872      	ldr	r2, [r6, #4]
 8000e70:	3a01      	subs	r2, #1
 8000e72:	2a00      	cmp	r2, #0
 8000e74:	6072      	str	r2, [r6, #4]
 8000e76:	dc07      	bgt.n	8000e88 <_scanf_i+0xb8>
 8000e78:	f8d4 2180 	ldr.w	r2, [r4, #384]	@ 0x180
 8000e7c:	4631      	mov	r1, r6
 8000e7e:	4650      	mov	r0, sl
 8000e80:	4790      	blx	r2
 8000e82:	2800      	cmp	r0, #0
 8000e84:	f040 8085 	bne.w	8000f92 <_scanf_i+0x1c2>
 8000e88:	f10b 0b01 	add.w	fp, fp, #1
 8000e8c:	f1bb 0f03 	cmp.w	fp, #3
 8000e90:	d1cb      	bne.n	8000e2a <_scanf_i+0x5a>
 8000e92:	6863      	ldr	r3, [r4, #4]
 8000e94:	b90b      	cbnz	r3, 8000e9a <_scanf_i+0xca>
 8000e96:	230a      	movs	r3, #10
 8000e98:	6063      	str	r3, [r4, #4]
 8000e9a:	6863      	ldr	r3, [r4, #4]
 8000e9c:	4945      	ldr	r1, [pc, #276]	@ (8000fb4 <_scanf_i+0x1e4>)
 8000e9e:	6960      	ldr	r0, [r4, #20]
 8000ea0:	1ac9      	subs	r1, r1, r3
 8000ea2:	f000 f889 	bl	8000fb8 <__sccl>
 8000ea6:	f04f 0b00 	mov.w	fp, #0
 8000eaa:	68a3      	ldr	r3, [r4, #8]
 8000eac:	6822      	ldr	r2, [r4, #0]
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	d03d      	beq.n	8000f2e <_scanf_i+0x15e>
 8000eb2:	6831      	ldr	r1, [r6, #0]
 8000eb4:	6960      	ldr	r0, [r4, #20]
 8000eb6:	f891 c000 	ldrb.w	ip, [r1]
 8000eba:	f810 000c 	ldrb.w	r0, [r0, ip]
 8000ebe:	2800      	cmp	r0, #0
 8000ec0:	d035      	beq.n	8000f2e <_scanf_i+0x15e>
 8000ec2:	f1bc 0f30 	cmp.w	ip, #48	@ 0x30
 8000ec6:	d124      	bne.n	8000f12 <_scanf_i+0x142>
 8000ec8:	0510      	lsls	r0, r2, #20
 8000eca:	d522      	bpl.n	8000f12 <_scanf_i+0x142>
 8000ecc:	f10b 0b01 	add.w	fp, fp, #1
 8000ed0:	f1b9 0f00 	cmp.w	r9, #0
 8000ed4:	d003      	beq.n	8000ede <_scanf_i+0x10e>
 8000ed6:	3301      	adds	r3, #1
 8000ed8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8000edc:	60a3      	str	r3, [r4, #8]
 8000ede:	6873      	ldr	r3, [r6, #4]
 8000ee0:	3b01      	subs	r3, #1
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	6073      	str	r3, [r6, #4]
 8000ee6:	dd1b      	ble.n	8000f20 <_scanf_i+0x150>
 8000ee8:	6833      	ldr	r3, [r6, #0]
 8000eea:	3301      	adds	r3, #1
 8000eec:	6033      	str	r3, [r6, #0]
 8000eee:	68a3      	ldr	r3, [r4, #8]
 8000ef0:	3b01      	subs	r3, #1
 8000ef2:	60a3      	str	r3, [r4, #8]
 8000ef4:	e7d9      	b.n	8000eaa <_scanf_i+0xda>
 8000ef6:	f1bb 0f02 	cmp.w	fp, #2
 8000efa:	d1ae      	bne.n	8000e5a <_scanf_i+0x8a>
 8000efc:	6822      	ldr	r2, [r4, #0]
 8000efe:	f402 61c0 	and.w	r1, r2, #1536	@ 0x600
 8000f02:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8000f06:	d1bf      	bne.n	8000e88 <_scanf_i+0xb8>
 8000f08:	2110      	movs	r1, #16
 8000f0a:	6061      	str	r1, [r4, #4]
 8000f0c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000f10:	e7a2      	b.n	8000e58 <_scanf_i+0x88>
 8000f12:	f422 6210 	bic.w	r2, r2, #2304	@ 0x900
 8000f16:	6022      	str	r2, [r4, #0]
 8000f18:	780b      	ldrb	r3, [r1, #0]
 8000f1a:	f805 3b01 	strb.w	r3, [r5], #1
 8000f1e:	e7de      	b.n	8000ede <_scanf_i+0x10e>
 8000f20:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8000f24:	4631      	mov	r1, r6
 8000f26:	4650      	mov	r0, sl
 8000f28:	4798      	blx	r3
 8000f2a:	2800      	cmp	r0, #0
 8000f2c:	d0df      	beq.n	8000eee <_scanf_i+0x11e>
 8000f2e:	6823      	ldr	r3, [r4, #0]
 8000f30:	05d9      	lsls	r1, r3, #23
 8000f32:	d50d      	bpl.n	8000f50 <_scanf_i+0x180>
 8000f34:	42bd      	cmp	r5, r7
 8000f36:	d909      	bls.n	8000f4c <_scanf_i+0x17c>
 8000f38:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8000f3c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8000f40:	4632      	mov	r2, r6
 8000f42:	4650      	mov	r0, sl
 8000f44:	4798      	blx	r3
 8000f46:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
 8000f4a:	464d      	mov	r5, r9
 8000f4c:	42bd      	cmp	r5, r7
 8000f4e:	d028      	beq.n	8000fa2 <_scanf_i+0x1d2>
 8000f50:	6822      	ldr	r2, [r4, #0]
 8000f52:	f012 0210 	ands.w	r2, r2, #16
 8000f56:	d113      	bne.n	8000f80 <_scanf_i+0x1b0>
 8000f58:	702a      	strb	r2, [r5, #0]
 8000f5a:	6863      	ldr	r3, [r4, #4]
 8000f5c:	9e01      	ldr	r6, [sp, #4]
 8000f5e:	4639      	mov	r1, r7
 8000f60:	4650      	mov	r0, sl
 8000f62:	47b0      	blx	r6
 8000f64:	f8d8 3000 	ldr.w	r3, [r8]
 8000f68:	6821      	ldr	r1, [r4, #0]
 8000f6a:	1d1a      	adds	r2, r3, #4
 8000f6c:	f8c8 2000 	str.w	r2, [r8]
 8000f70:	f011 0f20 	tst.w	r1, #32
 8000f74:	681b      	ldr	r3, [r3, #0]
 8000f76:	d00f      	beq.n	8000f98 <_scanf_i+0x1c8>
 8000f78:	6018      	str	r0, [r3, #0]
 8000f7a:	68e3      	ldr	r3, [r4, #12]
 8000f7c:	3301      	adds	r3, #1
 8000f7e:	60e3      	str	r3, [r4, #12]
 8000f80:	6923      	ldr	r3, [r4, #16]
 8000f82:	1bed      	subs	r5, r5, r7
 8000f84:	445d      	add	r5, fp
 8000f86:	442b      	add	r3, r5
 8000f88:	6123      	str	r3, [r4, #16]
 8000f8a:	2000      	movs	r0, #0
 8000f8c:	b007      	add	sp, #28
 8000f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f92:	f04f 0b00 	mov.w	fp, #0
 8000f96:	e7ca      	b.n	8000f2e <_scanf_i+0x15e>
 8000f98:	07ca      	lsls	r2, r1, #31
 8000f9a:	bf4c      	ite	mi
 8000f9c:	8018      	strhmi	r0, [r3, #0]
 8000f9e:	6018      	strpl	r0, [r3, #0]
 8000fa0:	e7eb      	b.n	8000f7a <_scanf_i+0x1aa>
 8000fa2:	2001      	movs	r0, #1
 8000fa4:	e7f2      	b.n	8000f8c <_scanf_i+0x1bc>
 8000fa6:	bf00      	nop
 8000fa8:	08001394 	.word	0x08001394
 8000fac:	0800122d 	.word	0x0800122d
 8000fb0:	0800130d 	.word	0x0800130d
 8000fb4:	080013b4 	.word	0x080013b4

08000fb8 <__sccl>:
 8000fb8:	b570      	push	{r4, r5, r6, lr}
 8000fba:	780b      	ldrb	r3, [r1, #0]
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	2b5e      	cmp	r3, #94	@ 0x5e
 8000fc0:	bf0b      	itete	eq
 8000fc2:	784b      	ldrbeq	r3, [r1, #1]
 8000fc4:	1c4a      	addne	r2, r1, #1
 8000fc6:	1c8a      	addeq	r2, r1, #2
 8000fc8:	2100      	movne	r1, #0
 8000fca:	bf08      	it	eq
 8000fcc:	2101      	moveq	r1, #1
 8000fce:	3801      	subs	r0, #1
 8000fd0:	f104 05ff 	add.w	r5, r4, #255	@ 0xff
 8000fd4:	f800 1f01 	strb.w	r1, [r0, #1]!
 8000fd8:	42a8      	cmp	r0, r5
 8000fda:	d1fb      	bne.n	8000fd4 <__sccl+0x1c>
 8000fdc:	b90b      	cbnz	r3, 8000fe2 <__sccl+0x2a>
 8000fde:	1e50      	subs	r0, r2, #1
 8000fe0:	bd70      	pop	{r4, r5, r6, pc}
 8000fe2:	f081 0101 	eor.w	r1, r1, #1
 8000fe6:	54e1      	strb	r1, [r4, r3]
 8000fe8:	4610      	mov	r0, r2
 8000fea:	4602      	mov	r2, r0
 8000fec:	f812 5b01 	ldrb.w	r5, [r2], #1
 8000ff0:	2d2d      	cmp	r5, #45	@ 0x2d
 8000ff2:	d005      	beq.n	8001000 <__sccl+0x48>
 8000ff4:	2d5d      	cmp	r5, #93	@ 0x5d
 8000ff6:	d016      	beq.n	8001026 <__sccl+0x6e>
 8000ff8:	2d00      	cmp	r5, #0
 8000ffa:	d0f1      	beq.n	8000fe0 <__sccl+0x28>
 8000ffc:	462b      	mov	r3, r5
 8000ffe:	e7f2      	b.n	8000fe6 <__sccl+0x2e>
 8001000:	7846      	ldrb	r6, [r0, #1]
 8001002:	2e5d      	cmp	r6, #93	@ 0x5d
 8001004:	d0fa      	beq.n	8000ffc <__sccl+0x44>
 8001006:	42b3      	cmp	r3, r6
 8001008:	dcf8      	bgt.n	8000ffc <__sccl+0x44>
 800100a:	3002      	adds	r0, #2
 800100c:	461a      	mov	r2, r3
 800100e:	3201      	adds	r2, #1
 8001010:	4296      	cmp	r6, r2
 8001012:	54a1      	strb	r1, [r4, r2]
 8001014:	dcfb      	bgt.n	800100e <__sccl+0x56>
 8001016:	1af2      	subs	r2, r6, r3
 8001018:	3a01      	subs	r2, #1
 800101a:	1c5d      	adds	r5, r3, #1
 800101c:	42b3      	cmp	r3, r6
 800101e:	bfa8      	it	ge
 8001020:	2200      	movge	r2, #0
 8001022:	18ab      	adds	r3, r5, r2
 8001024:	e7e1      	b.n	8000fea <__sccl+0x32>
 8001026:	4610      	mov	r0, r2
 8001028:	e7da      	b.n	8000fe0 <__sccl+0x28>

0800102a <__submore>:
 800102a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800102e:	460c      	mov	r4, r1
 8001030:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8001032:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001036:	4299      	cmp	r1, r3
 8001038:	d11d      	bne.n	8001076 <__submore+0x4c>
 800103a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800103e:	f7ff fc15 	bl	800086c <_malloc_r>
 8001042:	b918      	cbnz	r0, 800104c <__submore+0x22>
 8001044:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800104c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001050:	63a3      	str	r3, [r4, #56]	@ 0x38
 8001052:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 8001056:	6360      	str	r0, [r4, #52]	@ 0x34
 8001058:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
 800105c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8001060:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
 8001064:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8001068:	f880 33fd 	strb.w	r3, [r0, #1021]	@ 0x3fd
 800106c:	f200 30fd 	addw	r0, r0, #1021	@ 0x3fd
 8001070:	6020      	str	r0, [r4, #0]
 8001072:	2000      	movs	r0, #0
 8001074:	e7e8      	b.n	8001048 <__submore+0x1e>
 8001076:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
 8001078:	0077      	lsls	r7, r6, #1
 800107a:	463a      	mov	r2, r7
 800107c:	f000 f82e 	bl	80010dc <_realloc_r>
 8001080:	4605      	mov	r5, r0
 8001082:	2800      	cmp	r0, #0
 8001084:	d0de      	beq.n	8001044 <__submore+0x1a>
 8001086:	eb00 0806 	add.w	r8, r0, r6
 800108a:	4601      	mov	r1, r0
 800108c:	4632      	mov	r2, r6
 800108e:	4640      	mov	r0, r8
 8001090:	f000 f816 	bl	80010c0 <memcpy>
 8001094:	e9c4 570d 	strd	r5, r7, [r4, #52]	@ 0x34
 8001098:	f8c4 8000 	str.w	r8, [r4]
 800109c:	e7e9      	b.n	8001072 <__submore+0x48>
	...

080010a0 <_sbrk_r>:
 80010a0:	b538      	push	{r3, r4, r5, lr}
 80010a2:	4d06      	ldr	r5, [pc, #24]	@ (80010bc <_sbrk_r+0x1c>)
 80010a4:	2300      	movs	r3, #0
 80010a6:	4604      	mov	r4, r0
 80010a8:	4608      	mov	r0, r1
 80010aa:	602b      	str	r3, [r5, #0]
 80010ac:	f7ff f9b0 	bl	8000410 <_sbrk>
 80010b0:	1c43      	adds	r3, r0, #1
 80010b2:	d102      	bne.n	80010ba <_sbrk_r+0x1a>
 80010b4:	682b      	ldr	r3, [r5, #0]
 80010b6:	b103      	cbz	r3, 80010ba <_sbrk_r+0x1a>
 80010b8:	6023      	str	r3, [r4, #0]
 80010ba:	bd38      	pop	{r3, r4, r5, pc}
 80010bc:	200001a8 	.word	0x200001a8

080010c0 <memcpy>:
 80010c0:	440a      	add	r2, r1
 80010c2:	4291      	cmp	r1, r2
 80010c4:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 80010c8:	d100      	bne.n	80010cc <memcpy+0xc>
 80010ca:	4770      	bx	lr
 80010cc:	b510      	push	{r4, lr}
 80010ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80010d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80010d6:	4291      	cmp	r1, r2
 80010d8:	d1f9      	bne.n	80010ce <memcpy+0xe>
 80010da:	bd10      	pop	{r4, pc}

080010dc <_realloc_r>:
 80010dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010e0:	4680      	mov	r8, r0
 80010e2:	4615      	mov	r5, r2
 80010e4:	460c      	mov	r4, r1
 80010e6:	b921      	cbnz	r1, 80010f2 <_realloc_r+0x16>
 80010e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010ec:	4611      	mov	r1, r2
 80010ee:	f7ff bbbd 	b.w	800086c <_malloc_r>
 80010f2:	b92a      	cbnz	r2, 8001100 <_realloc_r+0x24>
 80010f4:	f7ff fb4e 	bl	8000794 <_free_r>
 80010f8:	2400      	movs	r4, #0
 80010fa:	4620      	mov	r0, r4
 80010fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001100:	f000 f906 	bl	8001310 <_malloc_usable_size_r>
 8001104:	4285      	cmp	r5, r0
 8001106:	4606      	mov	r6, r0
 8001108:	d802      	bhi.n	8001110 <_realloc_r+0x34>
 800110a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800110e:	d8f4      	bhi.n	80010fa <_realloc_r+0x1e>
 8001110:	4629      	mov	r1, r5
 8001112:	4640      	mov	r0, r8
 8001114:	f7ff fbaa 	bl	800086c <_malloc_r>
 8001118:	4607      	mov	r7, r0
 800111a:	2800      	cmp	r0, #0
 800111c:	d0ec      	beq.n	80010f8 <_realloc_r+0x1c>
 800111e:	42b5      	cmp	r5, r6
 8001120:	462a      	mov	r2, r5
 8001122:	4621      	mov	r1, r4
 8001124:	bf28      	it	cs
 8001126:	4632      	movcs	r2, r6
 8001128:	f7ff ffca 	bl	80010c0 <memcpy>
 800112c:	4621      	mov	r1, r4
 800112e:	4640      	mov	r0, r8
 8001130:	f7ff fb30 	bl	8000794 <_free_r>
 8001134:	463c      	mov	r4, r7
 8001136:	e7e0      	b.n	80010fa <_realloc_r+0x1e>

08001138 <_strtol_l.constprop.0>:
 8001138:	2b24      	cmp	r3, #36	@ 0x24
 800113a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800113e:	4686      	mov	lr, r0
 8001140:	4690      	mov	r8, r2
 8001142:	d801      	bhi.n	8001148 <_strtol_l.constprop.0+0x10>
 8001144:	2b01      	cmp	r3, #1
 8001146:	d106      	bne.n	8001156 <_strtol_l.constprop.0+0x1e>
 8001148:	f7ff faf8 	bl	800073c <__errno>
 800114c:	2316      	movs	r3, #22
 800114e:	6003      	str	r3, [r0, #0]
 8001150:	2000      	movs	r0, #0
 8001152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001156:	4834      	ldr	r0, [pc, #208]	@ (8001228 <_strtol_l.constprop.0+0xf0>)
 8001158:	460d      	mov	r5, r1
 800115a:	462a      	mov	r2, r5
 800115c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001160:	5d06      	ldrb	r6, [r0, r4]
 8001162:	f016 0608 	ands.w	r6, r6, #8
 8001166:	d1f8      	bne.n	800115a <_strtol_l.constprop.0+0x22>
 8001168:	2c2d      	cmp	r4, #45	@ 0x2d
 800116a:	d12d      	bne.n	80011c8 <_strtol_l.constprop.0+0x90>
 800116c:	782c      	ldrb	r4, [r5, #0]
 800116e:	2601      	movs	r6, #1
 8001170:	1c95      	adds	r5, r2, #2
 8001172:	f033 0210 	bics.w	r2, r3, #16
 8001176:	d109      	bne.n	800118c <_strtol_l.constprop.0+0x54>
 8001178:	2c30      	cmp	r4, #48	@ 0x30
 800117a:	d12a      	bne.n	80011d2 <_strtol_l.constprop.0+0x9a>
 800117c:	782a      	ldrb	r2, [r5, #0]
 800117e:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8001182:	2a58      	cmp	r2, #88	@ 0x58
 8001184:	d125      	bne.n	80011d2 <_strtol_l.constprop.0+0x9a>
 8001186:	786c      	ldrb	r4, [r5, #1]
 8001188:	2310      	movs	r3, #16
 800118a:	3502      	adds	r5, #2
 800118c:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8001190:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8001194:	2200      	movs	r2, #0
 8001196:	fbbc f9f3 	udiv	r9, ip, r3
 800119a:	4610      	mov	r0, r2
 800119c:	fb03 ca19 	mls	sl, r3, r9, ip
 80011a0:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80011a4:	2f09      	cmp	r7, #9
 80011a6:	d81b      	bhi.n	80011e0 <_strtol_l.constprop.0+0xa8>
 80011a8:	463c      	mov	r4, r7
 80011aa:	42a3      	cmp	r3, r4
 80011ac:	dd27      	ble.n	80011fe <_strtol_l.constprop.0+0xc6>
 80011ae:	1c57      	adds	r7, r2, #1
 80011b0:	d007      	beq.n	80011c2 <_strtol_l.constprop.0+0x8a>
 80011b2:	4581      	cmp	r9, r0
 80011b4:	d320      	bcc.n	80011f8 <_strtol_l.constprop.0+0xc0>
 80011b6:	d101      	bne.n	80011bc <_strtol_l.constprop.0+0x84>
 80011b8:	45a2      	cmp	sl, r4
 80011ba:	db1d      	blt.n	80011f8 <_strtol_l.constprop.0+0xc0>
 80011bc:	fb00 4003 	mla	r0, r0, r3, r4
 80011c0:	2201      	movs	r2, #1
 80011c2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80011c6:	e7eb      	b.n	80011a0 <_strtol_l.constprop.0+0x68>
 80011c8:	2c2b      	cmp	r4, #43	@ 0x2b
 80011ca:	bf04      	itt	eq
 80011cc:	782c      	ldrbeq	r4, [r5, #0]
 80011ce:	1c95      	addeq	r5, r2, #2
 80011d0:	e7cf      	b.n	8001172 <_strtol_l.constprop.0+0x3a>
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d1da      	bne.n	800118c <_strtol_l.constprop.0+0x54>
 80011d6:	2c30      	cmp	r4, #48	@ 0x30
 80011d8:	bf0c      	ite	eq
 80011da:	2308      	moveq	r3, #8
 80011dc:	230a      	movne	r3, #10
 80011de:	e7d5      	b.n	800118c <_strtol_l.constprop.0+0x54>
 80011e0:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80011e4:	2f19      	cmp	r7, #25
 80011e6:	d801      	bhi.n	80011ec <_strtol_l.constprop.0+0xb4>
 80011e8:	3c37      	subs	r4, #55	@ 0x37
 80011ea:	e7de      	b.n	80011aa <_strtol_l.constprop.0+0x72>
 80011ec:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80011f0:	2f19      	cmp	r7, #25
 80011f2:	d804      	bhi.n	80011fe <_strtol_l.constprop.0+0xc6>
 80011f4:	3c57      	subs	r4, #87	@ 0x57
 80011f6:	e7d8      	b.n	80011aa <_strtol_l.constprop.0+0x72>
 80011f8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80011fc:	e7e1      	b.n	80011c2 <_strtol_l.constprop.0+0x8a>
 80011fe:	1c53      	adds	r3, r2, #1
 8001200:	d108      	bne.n	8001214 <_strtol_l.constprop.0+0xdc>
 8001202:	2322      	movs	r3, #34	@ 0x22
 8001204:	f8ce 3000 	str.w	r3, [lr]
 8001208:	4660      	mov	r0, ip
 800120a:	f1b8 0f00 	cmp.w	r8, #0
 800120e:	d0a0      	beq.n	8001152 <_strtol_l.constprop.0+0x1a>
 8001210:	1e69      	subs	r1, r5, #1
 8001212:	e006      	b.n	8001222 <_strtol_l.constprop.0+0xea>
 8001214:	b106      	cbz	r6, 8001218 <_strtol_l.constprop.0+0xe0>
 8001216:	4240      	negs	r0, r0
 8001218:	f1b8 0f00 	cmp.w	r8, #0
 800121c:	d099      	beq.n	8001152 <_strtol_l.constprop.0+0x1a>
 800121e:	2a00      	cmp	r2, #0
 8001220:	d1f6      	bne.n	8001210 <_strtol_l.constprop.0+0xd8>
 8001222:	f8c8 1000 	str.w	r1, [r8]
 8001226:	e794      	b.n	8001152 <_strtol_l.constprop.0+0x1a>
 8001228:	080013c0 	.word	0x080013c0

0800122c <_strtol_r>:
 800122c:	f7ff bf84 	b.w	8001138 <_strtol_l.constprop.0>

08001230 <_strtoul_l.constprop.0>:
 8001230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001234:	4e34      	ldr	r6, [pc, #208]	@ (8001308 <_strtoul_l.constprop.0+0xd8>)
 8001236:	4686      	mov	lr, r0
 8001238:	460d      	mov	r5, r1
 800123a:	4628      	mov	r0, r5
 800123c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001240:	5d37      	ldrb	r7, [r6, r4]
 8001242:	f017 0708 	ands.w	r7, r7, #8
 8001246:	d1f8      	bne.n	800123a <_strtoul_l.constprop.0+0xa>
 8001248:	2c2d      	cmp	r4, #45	@ 0x2d
 800124a:	d12f      	bne.n	80012ac <_strtoul_l.constprop.0+0x7c>
 800124c:	782c      	ldrb	r4, [r5, #0]
 800124e:	2701      	movs	r7, #1
 8001250:	1c85      	adds	r5, r0, #2
 8001252:	f033 0010 	bics.w	r0, r3, #16
 8001256:	d109      	bne.n	800126c <_strtoul_l.constprop.0+0x3c>
 8001258:	2c30      	cmp	r4, #48	@ 0x30
 800125a:	d12c      	bne.n	80012b6 <_strtoul_l.constprop.0+0x86>
 800125c:	7828      	ldrb	r0, [r5, #0]
 800125e:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
 8001262:	2858      	cmp	r0, #88	@ 0x58
 8001264:	d127      	bne.n	80012b6 <_strtoul_l.constprop.0+0x86>
 8001266:	786c      	ldrb	r4, [r5, #1]
 8001268:	2310      	movs	r3, #16
 800126a:	3502      	adds	r5, #2
 800126c:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 8001270:	2600      	movs	r6, #0
 8001272:	fbb8 f8f3 	udiv	r8, r8, r3
 8001276:	fb03 f908 	mul.w	r9, r3, r8
 800127a:	ea6f 0909 	mvn.w	r9, r9
 800127e:	4630      	mov	r0, r6
 8001280:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8001284:	f1bc 0f09 	cmp.w	ip, #9
 8001288:	d81c      	bhi.n	80012c4 <_strtoul_l.constprop.0+0x94>
 800128a:	4664      	mov	r4, ip
 800128c:	42a3      	cmp	r3, r4
 800128e:	dd2a      	ble.n	80012e6 <_strtoul_l.constprop.0+0xb6>
 8001290:	f1b6 3fff 	cmp.w	r6, #4294967295	@ 0xffffffff
 8001294:	d007      	beq.n	80012a6 <_strtoul_l.constprop.0+0x76>
 8001296:	4580      	cmp	r8, r0
 8001298:	d322      	bcc.n	80012e0 <_strtoul_l.constprop.0+0xb0>
 800129a:	d101      	bne.n	80012a0 <_strtoul_l.constprop.0+0x70>
 800129c:	45a1      	cmp	r9, r4
 800129e:	db1f      	blt.n	80012e0 <_strtoul_l.constprop.0+0xb0>
 80012a0:	fb00 4003 	mla	r0, r0, r3, r4
 80012a4:	2601      	movs	r6, #1
 80012a6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80012aa:	e7e9      	b.n	8001280 <_strtoul_l.constprop.0+0x50>
 80012ac:	2c2b      	cmp	r4, #43	@ 0x2b
 80012ae:	bf04      	itt	eq
 80012b0:	782c      	ldrbeq	r4, [r5, #0]
 80012b2:	1c85      	addeq	r5, r0, #2
 80012b4:	e7cd      	b.n	8001252 <_strtoul_l.constprop.0+0x22>
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d1d8      	bne.n	800126c <_strtoul_l.constprop.0+0x3c>
 80012ba:	2c30      	cmp	r4, #48	@ 0x30
 80012bc:	bf0c      	ite	eq
 80012be:	2308      	moveq	r3, #8
 80012c0:	230a      	movne	r3, #10
 80012c2:	e7d3      	b.n	800126c <_strtoul_l.constprop.0+0x3c>
 80012c4:	f1a4 0c41 	sub.w	ip, r4, #65	@ 0x41
 80012c8:	f1bc 0f19 	cmp.w	ip, #25
 80012cc:	d801      	bhi.n	80012d2 <_strtoul_l.constprop.0+0xa2>
 80012ce:	3c37      	subs	r4, #55	@ 0x37
 80012d0:	e7dc      	b.n	800128c <_strtoul_l.constprop.0+0x5c>
 80012d2:	f1a4 0c61 	sub.w	ip, r4, #97	@ 0x61
 80012d6:	f1bc 0f19 	cmp.w	ip, #25
 80012da:	d804      	bhi.n	80012e6 <_strtoul_l.constprop.0+0xb6>
 80012dc:	3c57      	subs	r4, #87	@ 0x57
 80012de:	e7d5      	b.n	800128c <_strtoul_l.constprop.0+0x5c>
 80012e0:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 80012e4:	e7df      	b.n	80012a6 <_strtoul_l.constprop.0+0x76>
 80012e6:	1c73      	adds	r3, r6, #1
 80012e8:	d106      	bne.n	80012f8 <_strtoul_l.constprop.0+0xc8>
 80012ea:	2322      	movs	r3, #34	@ 0x22
 80012ec:	f8ce 3000 	str.w	r3, [lr]
 80012f0:	4630      	mov	r0, r6
 80012f2:	b932      	cbnz	r2, 8001302 <_strtoul_l.constprop.0+0xd2>
 80012f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012f8:	b107      	cbz	r7, 80012fc <_strtoul_l.constprop.0+0xcc>
 80012fa:	4240      	negs	r0, r0
 80012fc:	2a00      	cmp	r2, #0
 80012fe:	d0f9      	beq.n	80012f4 <_strtoul_l.constprop.0+0xc4>
 8001300:	b106      	cbz	r6, 8001304 <_strtoul_l.constprop.0+0xd4>
 8001302:	1e69      	subs	r1, r5, #1
 8001304:	6011      	str	r1, [r2, #0]
 8001306:	e7f5      	b.n	80012f4 <_strtoul_l.constprop.0+0xc4>
 8001308:	080013c0 	.word	0x080013c0

0800130c <_strtoul_r>:
 800130c:	f7ff bf90 	b.w	8001230 <_strtoul_l.constprop.0>

08001310 <_malloc_usable_size_r>:
 8001310:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001314:	1f18      	subs	r0, r3, #4
 8001316:	2b00      	cmp	r3, #0
 8001318:	bfbc      	itt	lt
 800131a:	580b      	ldrlt	r3, [r1, r0]
 800131c:	18c0      	addlt	r0, r0, r3
 800131e:	4770      	bx	lr

08001320 <_init>:
 8001320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001322:	bf00      	nop
 8001324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001326:	bc08      	pop	{r3}
 8001328:	469e      	mov	lr, r3
 800132a:	4770      	bx	lr

0800132c <_fini>:
 800132c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800132e:	bf00      	nop
 8001330:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001332:	bc08      	pop	{r3}
 8001334:	469e      	mov	lr, r3
 8001336:	4770      	bx	lr
